// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Integration Stack 1`] = `
App {
  "_assemblyBuilder": CloudAssemblyBuilder {
    "artifacts": {},
    "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
    "missing": [],
    "outdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
    "parentBuilder": undefined,
  },
  "_treeMetadata": true,
  "account": undefined,
  "constructPathsCache": Set {},
  "node": Node {
    "_children": {
      "NextJsApp": NextJsHostingStack {
        "_crossRegionReferences": false,
        "_logicalIds": LogicalIDs {
          "renames": {},
          "reverse": {},
        },
        "_missingContext": [
          {
            "key": "hosted-zone:account=0000000000:domainName=s0na.de:region=eu-central-1",
            "props": {
              "account": "0000000000",
              "domainName": "s0na.de",
              "dummyValue": {
                "Id": "DUMMY",
                "Name": "s0na.de",
              },
              "ignoreErrorOnMissingContext": undefined,
              "region": "eu-central-1",
            },
            "provider": "hosted-zone",
          },
        ],
        "_notificationArns": undefined,
        "_stackDependencies": {},
        "_stackName": "NextJsApp",
        "_suppressTemplateIndentation": false,
        "_terminationProtection": false,
        "_versionReportingEnabled": undefined,
        "account": "0000000000",
        "artifactId": "NextJsApp",
        "environment": "aws://0000000000/eu-central-1",
        "node": Node {
          "_children": {
            "AWSCloudFrontPartitionHostedZoneIdMap": CfnMapping {
              "lazy": undefined,
              "lazyInformed": false,
              "lazyRender": true,
              "logicalId": "\${Token[NextJsApp.AWSCloudFrontPartitionHostedZoneIdMap.LogicalID.87]}",
              "mapping": {
                "aws": {
                  "zoneId": "Z2FDTNDATAQYW2",
                },
                "aws-cn": {
                  "zoneId": "Z3RFFRIM2A3IF5",
                },
              },
              "node": Node {
                "_children": {},
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [
                  {
                    "data": "\${Token[NextJsApp.AWSCloudFrontPartitionHostedZoneIdMap.LogicalID.87]}",
                    "trace": undefined,
                    "type": "aws:cdk:logicalId",
                  },
                ],
                "_validations": [],
                "host": [Circular],
                "id": "AWSCloudFrontPartitionHostedZoneIdMap",
                "scope": [Circular],
              },
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "HostedBucket": CloudfrontHostedS3Bucket {
              "accessKey": AccessKey {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "accessKeyId": "\${Token[TOKEN.103]}",
                "env": {
                  "account": "0000000000",
                  "region": "eu-central-1",
                },
                "node": Node {
                  "_children": {
                    "Resource": CfnAccessKey {
                      "_cfnProperties": {
                        "serial": undefined,
                        "status": undefined,
                        "userName": "\${Token[TOKEN.97]}",
                      },
                      "attrId": "\${Token[TOKEN.101]}",
                      "attrSecretAccessKey": "\${Token[TOKEN.102]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::IAM::AccessKey",
                      "dependsOn": Set {},
                      "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentAccessKey.Resource.LogicalID.100]}",
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[NextJsApp.HostedBucket.DeploymentAccessKey.Resource.LogicalID.100]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "rawOverrides": {},
                      "serial": undefined,
                      "stack": [Circular],
                      "status": undefined,
                      "userName": "\${Token[TOKEN.97]}",
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "DeploymentAccessKey",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.99]}",
                "secretAccessKey": "<unresolved-token>",
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "bucket": Bucket {
                "_allowCrossEnvironment": true,
                "_physicalName": "static.assets",
                "_resource": CfnBucket {
                  "_cfnProperties": {
                    "accelerateConfiguration": undefined,
                    "accessControl": "\${Token[TOKEN.45]}",
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "bucketKeyEnabled": undefined,
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256",
                          },
                        },
                      ],
                    },
                    "bucketName": "static.assets",
                    "corsConfiguration": "<unresolved-lazy>",
                    "intelligentTieringConfigurations": undefined,
                    "inventoryConfigurations": "<unresolved-lazy>",
                    "lifecycleConfiguration": "<unresolved-lazy>",
                    "loggingConfiguration": undefined,
                    "metricsConfigurations": "<unresolved-lazy>",
                    "objectLockConfiguration": undefined,
                    "objectLockEnabled": undefined,
                    "ownershipControls": "<unresolved-lazy>",
                    "publicAccessBlockConfiguration": BlockPublicAccess {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true,
                    },
                    "replicationConfiguration": undefined,
                    "versioningConfiguration": undefined,
                    "websiteConfiguration": {
                      "errorDocument": "index.html",
                      "indexDocument": "index.html",
                      "redirectAllRequestsTo": undefined,
                      "routingRules": undefined,
                    },
                  },
                  "accelerateConfiguration": undefined,
                  "accessControl": "\${Token[TOKEN.45]}",
                  "analyticsConfigurations": undefined,
                  "attrArn": "\${Token[TOKEN.47]}",
                  "attrDomainName": "\${Token[TOKEN.48]}",
                  "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                  "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                  "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                  "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                  "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                  "bucketEncryption": {
                    "serverSideEncryptionConfiguration": [
                      {
                        "bucketKeyEnabled": undefined,
                        "serverSideEncryptionByDefault": {
                          "sseAlgorithm": "AES256",
                        },
                      },
                    ],
                  },
                  "bucketName": "static.assets",
                  "cfnOptions": {
                    "deletionPolicy": "Delete",
                    "updateReplacePolicy": "Delete",
                  },
                  "cfnResourceType": "AWS::S3::Bucket",
                  "corsConfiguration": "<unresolved-lazy>",
                  "dependsOn": Set {},
                  "intelligentTieringConfigurations": undefined,
                  "inventoryConfigurations": "<unresolved-lazy>",
                  "lifecycleConfiguration": "<unresolved-lazy>",
                  "loggingConfiguration": undefined,
                  "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                  "metadataTableConfiguration": undefined,
                  "metricsConfigurations": "<unresolved-lazy>",
                  "node": Node {
                    "_children": {},
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [
                      {
                        "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                        "trace": undefined,
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "Resource",
                    "scope": [Circular],
                  },
                  "notificationConfiguration": undefined,
                  "objectLockConfiguration": undefined,
                  "objectLockEnabled": undefined,
                  "ownershipControls": "<unresolved-lazy>",
                  "publicAccessBlockConfiguration": BlockPublicAccess {
                    "blockPublicAcls": true,
                    "blockPublicPolicy": true,
                    "ignorePublicAcls": true,
                    "restrictPublicBuckets": true,
                  },
                  "rawOverrides": {},
                  "replicationConfiguration": undefined,
                  "stack": [Circular],
                  "tags": TagManager {
                    "didHaveInitialTags": false,
                    "externalTagPriority": 50,
                    "priorities": Map {},
                    "renderedTags": "<unresolved-lazy>",
                    "resourceTypeName": "AWS::S3::Bucket",
                    "tagFormatter": StandardFormatter {},
                    "tagPropertyName": "tags",
                    "tags": Map {},
                  },
                  "tagsRaw": undefined,
                  "versioningConfiguration": undefined,
                  "websiteConfiguration": {
                    "errorDocument": "index.html",
                    "indexDocument": "index.html",
                    "redirectAllRequestsTo": undefined,
                    "routingRules": undefined,
                  },
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "accessControl": undefined,
                "autoCreatePolicy": true,
                "bucketArn": "\${Token[TOKEN.56]}",
                "bucketDomainName": "\${Token[TOKEN.48]}",
                "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                "bucketName": "\${Token[TOKEN.55]}",
                "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                "cors": [
                  {
                    "allowedHeaders": [
                      "*",
                    ],
                    "allowedMethods": [
                      "GET",
                      "HEAD",
                    ],
                    "allowedOrigins": [
                      "*",
                    ],
                    "maxAge": 300,
                  },
                ],
                "disallowPublicAccess": true,
                "encryptionKey": undefined,
                "env": {
                  "account": "0000000000",
                  "region": "eu-central-1",
                },
                "eventBridgeEnabled": undefined,
                "inventories": [],
                "isWebsite": true,
                "lifecycleRules": [
                  {
                    "abortIncompleteMultipartUploadAfter": Duration {
                      "amount": 1,
                      "unit": TimeUnit {
                        "inMillis": 86400000,
                        "isoLabel": "D",
                        "label": "days",
                      },
                    },
                    "id": "AbortIncompleteMultipartUploadAfter",
                  },
                ],
                "metrics": [],
                "node": Node {
                  "_children": {
                    "Policy": BucketPolicy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "bucket": [Circular],
                      "document": {
                        "Statement": [
                          {
                            "Action": "s3:GetObject",
                            "Condition": {
                              "StringEquals": {
                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                              },
                            },
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                            },
                            "Resource": "\${Token[TOKEN.56]}/*",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "0000000000",
                        "region": "eu-central-1",
                      },
                      "node": Node {
                        "_children": {
                          "Resource": CfnBucketPolicy {
                            "_cfnProperties": {
                              "bucket": "\${Token[TOKEN.55]}",
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                            },
                            "bucket": "\${Token[TOKEN.55]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::S3::BucketPolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Condition": {
                                    "StringEquals": {
                                      "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                  },
                                  "Resource": "\${Token[TOKEN.56]}/*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Policy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.79]}",
                      "resource": CfnBucketPolicy {
                        "_cfnProperties": {
                          "bucket": "\${Token[TOKEN.55]}",
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                        },
                        "bucket": "\${Token[TOKEN.55]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::S3::BucketPolicy",
                        "dependsOn": Set {},
                        "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                },
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                              },
                              "Resource": "\${Token[TOKEN.56]}/*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "rawOverrides": {},
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnBucket {
                      "_cfnProperties": {
                        "accelerateConfiguration": undefined,
                        "accessControl": "\${Token[TOKEN.45]}",
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "bucketKeyEnabled": undefined,
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256",
                              },
                            },
                          ],
                        },
                        "bucketName": "static.assets",
                        "corsConfiguration": "<unresolved-lazy>",
                        "intelligentTieringConfigurations": undefined,
                        "inventoryConfigurations": "<unresolved-lazy>",
                        "lifecycleConfiguration": "<unresolved-lazy>",
                        "loggingConfiguration": undefined,
                        "metricsConfigurations": "<unresolved-lazy>",
                        "objectLockConfiguration": undefined,
                        "objectLockEnabled": undefined,
                        "ownershipControls": "<unresolved-lazy>",
                        "publicAccessBlockConfiguration": BlockPublicAccess {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true,
                        },
                        "replicationConfiguration": undefined,
                        "versioningConfiguration": undefined,
                        "websiteConfiguration": {
                          "errorDocument": "index.html",
                          "indexDocument": "index.html",
                          "redirectAllRequestsTo": undefined,
                          "routingRules": undefined,
                        },
                      },
                      "accelerateConfiguration": undefined,
                      "accessControl": "\${Token[TOKEN.45]}",
                      "analyticsConfigurations": undefined,
                      "attrArn": "\${Token[TOKEN.47]}",
                      "attrDomainName": "\${Token[TOKEN.48]}",
                      "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                      "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                      "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                      "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                      "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                      "bucketEncryption": {
                        "serverSideEncryptionConfiguration": [
                          {
                            "bucketKeyEnabled": undefined,
                            "serverSideEncryptionByDefault": {
                              "sseAlgorithm": "AES256",
                            },
                          },
                        ],
                      },
                      "bucketName": "static.assets",
                      "cfnOptions": {
                        "deletionPolicy": "Delete",
                        "updateReplacePolicy": "Delete",
                      },
                      "cfnResourceType": "AWS::S3::Bucket",
                      "corsConfiguration": "<unresolved-lazy>",
                      "dependsOn": Set {},
                      "intelligentTieringConfigurations": undefined,
                      "inventoryConfigurations": "<unresolved-lazy>",
                      "lifecycleConfiguration": "<unresolved-lazy>",
                      "loggingConfiguration": undefined,
                      "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                      "metadataTableConfiguration": undefined,
                      "metricsConfigurations": "<unresolved-lazy>",
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "notificationConfiguration": undefined,
                      "objectLockConfiguration": undefined,
                      "objectLockEnabled": undefined,
                      "ownershipControls": "<unresolved-lazy>",
                      "publicAccessBlockConfiguration": BlockPublicAccess {
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true,
                      },
                      "rawOverrides": {},
                      "replicationConfiguration": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "didHaveInitialTags": false,
                        "externalTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::S3::Bucket",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "tagsRaw": undefined,
                      "versioningConfiguration": undefined,
                      "websiteConfiguration": {
                        "errorDocument": "index.html",
                        "indexDocument": "index.html",
                        "redirectAllRequestsTo": undefined,
                        "routingRules": undefined,
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "Bucket",
                  "scope": [Circular],
                },
                "notificationsHandlerRole": undefined,
                "notificationsSkipDestinationValidation": undefined,
                "objectOwnership": undefined,
                "physicalName": "static.assets",
                "policy": BucketPolicy {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "bucket": [Circular],
                  "document": {
                    "Statement": [
                      {
                        "Action": "s3:GetObject",
                        "Condition": {
                          "StringEquals": {
                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                          },
                        },
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                        },
                        "Resource": "\${Token[TOKEN.56]}/*",
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "env": {
                    "account": "0000000000",
                    "region": "eu-central-1",
                  },
                  "node": Node {
                    "_children": {
                      "Resource": CfnBucketPolicy {
                        "_cfnProperties": {
                          "bucket": "\${Token[TOKEN.55]}",
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                        },
                        "bucket": "\${Token[TOKEN.55]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::S3::BucketPolicy",
                        "dependsOn": Set {},
                        "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                },
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                              },
                              "Resource": "\${Token[TOKEN.56]}/*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "rawOverrides": {},
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [],
                    "host": [Circular],
                    "id": "Policy",
                    "scope": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.79]}",
                  "resource": CfnBucketPolicy {
                    "_cfnProperties": {
                      "bucket": "\${Token[TOKEN.55]}",
                      "policyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:GetObject",
                            "Condition": {
                              "StringEquals": {
                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                              },
                            },
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                            },
                            "Resource": "\${Token[TOKEN.56]}/*",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                    },
                    "bucket": "\${Token[TOKEN.55]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::S3::BucketPolicy",
                    "dependsOn": Set {},
                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": "s3:GetObject",
                          "Condition": {
                            "StringEquals": {
                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                            },
                          },
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                          },
                          "Resource": "\${Token[TOKEN.56]}/*",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "rawOverrides": {},
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "replicationRoleArn": undefined,
                "stack": [Circular],
                "transitionDefaultMinimumObjectSize": undefined,
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "distribution": Distribution {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "additionalBehaviors": [],
                "boundOrigins": [
                  {
                    "distributionId": undefined,
                    "origin": S3BucketOriginWithOAC {
                      "bucket": Bucket {
                        "_allowCrossEnvironment": true,
                        "_physicalName": "static.assets",
                        "_resource": CfnBucket {
                          "_cfnProperties": {
                            "accelerateConfiguration": undefined,
                            "accessControl": "\${Token[TOKEN.45]}",
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "bucketKeyEnabled": undefined,
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "AES256",
                                  },
                                },
                              ],
                            },
                            "bucketName": "static.assets",
                            "corsConfiguration": "<unresolved-lazy>",
                            "intelligentTieringConfigurations": undefined,
                            "inventoryConfigurations": "<unresolved-lazy>",
                            "lifecycleConfiguration": "<unresolved-lazy>",
                            "loggingConfiguration": undefined,
                            "metricsConfigurations": "<unresolved-lazy>",
                            "objectLockConfiguration": undefined,
                            "objectLockEnabled": undefined,
                            "ownershipControls": "<unresolved-lazy>",
                            "publicAccessBlockConfiguration": BlockPublicAccess {
                              "blockPublicAcls": true,
                              "blockPublicPolicy": true,
                              "ignorePublicAcls": true,
                              "restrictPublicBuckets": true,
                            },
                            "replicationConfiguration": undefined,
                            "versioningConfiguration": undefined,
                            "websiteConfiguration": {
                              "errorDocument": "index.html",
                              "indexDocument": "index.html",
                              "redirectAllRequestsTo": undefined,
                              "routingRules": undefined,
                            },
                          },
                          "accelerateConfiguration": undefined,
                          "accessControl": "\${Token[TOKEN.45]}",
                          "analyticsConfigurations": undefined,
                          "attrArn": "\${Token[TOKEN.47]}",
                          "attrDomainName": "\${Token[TOKEN.48]}",
                          "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                          "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                          "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                          "bucketEncryption": {
                            "serverSideEncryptionConfiguration": [
                              {
                                "bucketKeyEnabled": undefined,
                                "serverSideEncryptionByDefault": {
                                  "sseAlgorithm": "AES256",
                                },
                              },
                            ],
                          },
                          "bucketName": "static.assets",
                          "cfnOptions": {
                            "deletionPolicy": "Delete",
                            "updateReplacePolicy": "Delete",
                          },
                          "cfnResourceType": "AWS::S3::Bucket",
                          "corsConfiguration": "<unresolved-lazy>",
                          "dependsOn": Set {},
                          "intelligentTieringConfigurations": undefined,
                          "inventoryConfigurations": "<unresolved-lazy>",
                          "lifecycleConfiguration": "<unresolved-lazy>",
                          "loggingConfiguration": undefined,
                          "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                          "metadataTableConfiguration": undefined,
                          "metricsConfigurations": "<unresolved-lazy>",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "notificationConfiguration": undefined,
                          "objectLockConfiguration": undefined,
                          "objectLockEnabled": undefined,
                          "ownershipControls": "<unresolved-lazy>",
                          "publicAccessBlockConfiguration": BlockPublicAccess {
                            "blockPublicAcls": true,
                            "blockPublicPolicy": true,
                            "ignorePublicAcls": true,
                            "restrictPublicBuckets": true,
                          },
                          "rawOverrides": {},
                          "replicationConfiguration": undefined,
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::S3::Bucket",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          "versioningConfiguration": undefined,
                          "websiteConfiguration": {
                            "errorDocument": "index.html",
                            "indexDocument": "index.html",
                            "redirectAllRequestsTo": undefined,
                            "routingRules": undefined,
                          },
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "accessControl": undefined,
                        "autoCreatePolicy": true,
                        "bucketArn": "\${Token[TOKEN.56]}",
                        "bucketDomainName": "\${Token[TOKEN.48]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                        "bucketName": "\${Token[TOKEN.55]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                        "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                        "cors": [
                          {
                            "allowedHeaders": [
                              "*",
                            ],
                            "allowedMethods": [
                              "GET",
                              "HEAD",
                            ],
                            "allowedOrigins": [
                              "*",
                            ],
                            "maxAge": 300,
                          },
                        ],
                        "disallowPublicAccess": true,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "eventBridgeEnabled": undefined,
                        "inventories": [],
                        "isWebsite": true,
                        "lifecycleRules": [
                          {
                            "abortIncompleteMultipartUploadAfter": Duration {
                              "amount": 1,
                              "unit": TimeUnit {
                                "inMillis": 86400000,
                                "isoLabel": "D",
                                "label": "days",
                              },
                            },
                            "id": "AbortIncompleteMultipartUploadAfter",
                          },
                        ],
                        "metrics": [],
                        "node": Node {
                          "_children": {
                            "Policy": BucketPolicy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "bucket": [Circular],
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "node": Node {
                                "_children": {
                                  "Resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Policy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.79]}",
                              "resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnBucket {
                              "_cfnProperties": {
                                "accelerateConfiguration": undefined,
                                "accessControl": "\${Token[TOKEN.45]}",
                                "bucketEncryption": {
                                  "serverSideEncryptionConfiguration": [
                                    {
                                      "bucketKeyEnabled": undefined,
                                      "serverSideEncryptionByDefault": {
                                        "sseAlgorithm": "AES256",
                                      },
                                    },
                                  ],
                                },
                                "bucketName": "static.assets",
                                "corsConfiguration": "<unresolved-lazy>",
                                "intelligentTieringConfigurations": undefined,
                                "inventoryConfigurations": "<unresolved-lazy>",
                                "lifecycleConfiguration": "<unresolved-lazy>",
                                "loggingConfiguration": undefined,
                                "metricsConfigurations": "<unresolved-lazy>",
                                "objectLockConfiguration": undefined,
                                "objectLockEnabled": undefined,
                                "ownershipControls": "<unresolved-lazy>",
                                "publicAccessBlockConfiguration": BlockPublicAccess {
                                  "blockPublicAcls": true,
                                  "blockPublicPolicy": true,
                                  "ignorePublicAcls": true,
                                  "restrictPublicBuckets": true,
                                },
                                "replicationConfiguration": undefined,
                                "versioningConfiguration": undefined,
                                "websiteConfiguration": {
                                  "errorDocument": "index.html",
                                  "indexDocument": "index.html",
                                  "redirectAllRequestsTo": undefined,
                                  "routingRules": undefined,
                                },
                              },
                              "accelerateConfiguration": undefined,
                              "accessControl": "\${Token[TOKEN.45]}",
                              "analyticsConfigurations": undefined,
                              "attrArn": "\${Token[TOKEN.47]}",
                              "attrDomainName": "\${Token[TOKEN.48]}",
                              "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                              "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                              "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                              "bucketEncryption": {
                                "serverSideEncryptionConfiguration": [
                                  {
                                    "bucketKeyEnabled": undefined,
                                    "serverSideEncryptionByDefault": {
                                      "sseAlgorithm": "AES256",
                                    },
                                  },
                                ],
                              },
                              "bucketName": "static.assets",
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::S3::Bucket",
                              "corsConfiguration": "<unresolved-lazy>",
                              "dependsOn": Set {},
                              "intelligentTieringConfigurations": undefined,
                              "inventoryConfigurations": "<unresolved-lazy>",
                              "lifecycleConfiguration": "<unresolved-lazy>",
                              "loggingConfiguration": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                              "metadataTableConfiguration": undefined,
                              "metricsConfigurations": "<unresolved-lazy>",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "notificationConfiguration": undefined,
                              "objectLockConfiguration": undefined,
                              "objectLockEnabled": undefined,
                              "ownershipControls": "<unresolved-lazy>",
                              "publicAccessBlockConfiguration": BlockPublicAccess {
                                "blockPublicAcls": true,
                                "blockPublicPolicy": true,
                                "ignorePublicAcls": true,
                                "restrictPublicBuckets": true,
                              },
                              "rawOverrides": {},
                              "replicationConfiguration": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::S3::Bucket",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "versioningConfiguration": undefined,
                              "websiteConfiguration": {
                                "errorDocument": "index.html",
                                "indexDocument": "index.html",
                                "redirectAllRequestsTo": undefined,
                                "routingRules": undefined,
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "Bucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "notificationsSkipDestinationValidation": undefined,
                        "objectOwnership": undefined,
                        "physicalName": "static.assets",
                        "policy": BucketPolicy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "bucket": [Circular],
                          "document": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "node": Node {
                            "_children": {
                              "Resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Policy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.79]}",
                          "resource": CfnBucketPolicy {
                            "_cfnProperties": {
                              "bucket": "\${Token[TOKEN.55]}",
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                            },
                            "bucket": "\${Token[TOKEN.55]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::S3::BucketPolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Condition": {
                                    "StringEquals": {
                                      "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                  },
                                  "Resource": "\${Token[TOKEN.56]}/*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "replicationRoleArn": undefined,
                        "stack": [Circular],
                        "transitionDefaultMinimumObjectSize": undefined,
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "connectionAttempts": undefined,
                      "connectionTimeout": undefined,
                      "customHeaders": undefined,
                      "domainName": "\${Token[TOKEN.52]}",
                      "originAccessControl": S3OriginAccessControl {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "node": Node {
                          "_children": {
                            "Resource": CfnOriginAccessControl {
                              "_cfnProperties": {
                                "originAccessControlConfig": {
                                  "description": undefined,
                                  "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                  "originAccessControlOriginType": "s3",
                                  "signingBehavior": "always",
                                  "signingProtocol": "sigv4",
                                },
                              },
                              "attrId": "\${Token[TOKEN.77]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                              "dependsOn": Set {},
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "originAccessControlConfig": {
                                "description": undefined,
                                "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                "originAccessControlOriginType": "s3",
                                "signingBehavior": "always",
                                "signingProtocol": "sigv4",
                              },
                              "rawOverrides": {},
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "S3OriginAccessControl",
                          "scope": Construct {
                            "node": Node {
                              "_children": {
                                "S3OriginAccessControl": [Circular],
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Origin1",
                              "scope": [Circular],
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "originAccessControlId": "\${Token[TOKEN.77]}",
                        "physicalName": "\${Token[TOKEN.75]}",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "originAccessControlId": undefined,
                      "originAccessLevels": undefined,
                      "originId": undefined,
                      "originPath": undefined,
                      "originShieldEnabled": true,
                      "originShieldRegion": undefined,
                    },
                    "originId": "NextJsAppHostedBucketDistributionOrigin148025831",
                    "originProperty": {
                      "connectionAttempts": undefined,
                      "connectionTimeout": undefined,
                      "customOriginConfig": undefined,
                      "domainName": "\${Token[TOKEN.52]}",
                      "id": "NextJsAppHostedBucketDistributionOrigin148025831",
                      "originAccessControlId": "\${Token[TOKEN.77]}",
                      "originCustomHeaders": undefined,
                      "originPath": undefined,
                      "originShield": undefined,
                      "s3OriginConfig": {
                        "originAccessIdentity": "",
                      },
                      "vpcOriginConfig": undefined,
                    },
                  },
                ],
                "certificate": DnsValidatedCertificate {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "certificateArn": "\${Token[Default.Arn.44]}",
                  "domainName": "app.s0na.de",
                  "env": {
                    "account": "0000000000",
                    "region": "eu-central-1",
                  },
                  "hostedZoneId": "DUMMY",
                  "node": Node {
                    "_children": {
                      "CertificateRequestorFunction": CertificateRequestCertificateRequestFunction {
                        "_allowCrossEnvironment": false,
                        "_architecture": undefined,
                        "_functionUrlInvocationGrants": {},
                        "_invocationGrants": {},
                        "_layers": [],
                        "_logGroup": undefined,
                        "_physicalName": undefined,
                        "_policyCounter": 0,
                        "_warnIfCurrentVersionCalled": false,
                        "architecture": Architecture {
                          "dockerPlatform": "linux/amd64",
                          "name": "x86_64",
                        },
                        "canCreatePermissions": true,
                        "currentVersionOptions": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "environment": {},
                        "functionArn": "\${Token[TOKEN.33]}",
                        "functionName": "\${Token[TOKEN.32]}",
                        "grantPrincipal": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.20]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.34]}",
                            "_policyName": "\${Token[TOKEN.34]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "0000000000",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.37]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.34]}",
                                    "roles": [
                                      "#{Token[TOKEN.35]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.36]}",
                                    ],
                                  },
                                  "attrId": "\${Token[TOKEN.39]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.37]}",
                                  ],
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.34]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.35]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.36]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.34]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": [
                                "acm:RequestCertificate",
                                "acm:DescribeCertificate",
                                "acm:DeleteCertificate",
                                "acm:AddTagsToCertificate",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "route53:GetChange",
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "route53:changeResourceRecordSets",
                              "Condition": {
                                "ForAllValues:StringEquals": {
                                  "route53:ChangeResourceRecordSetsActions": [
                                    "UPSERT",
                                  ],
                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                    "CNAME",
                                  ],
                                },
                                "ForAllValues:StringLike": {
                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                    "*.app.s0na.de",
                                  ],
                                },
                              },
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.16]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    ],
                                  },
                                },
                                "principalAccount": "0000000000",
                                "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.17]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.14]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.19]}",
                                "attrRoleId": "\${Token[TOKEN.20]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.17]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.14]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "didHaveInitialTags": false,
                                  "externalTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                "tagsRaw": undefined,
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.14]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.21]}",
                              ],
                            },
                          },
                          "principalAccount": "0000000000",
                          "roleArn": "\${Token[TOKEN.21]}",
                          "roleName": "\${Token[TOKEN.23]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "hashMixins": [],
                        "node": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.25]}",
                                "policy": undefined,
                                "replicationRoleArn": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.24]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                    "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                    "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                    "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.25]}",
                                    "policy": undefined,
                                    "replicationRoleArn": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                    "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "deployTime": true,
                                      "exclude": [
                                        ".is_custom_resource",
                                      ],
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                    "sourceStats": Stats {
                                      "atimeMs": 1746343388554.7612,
                                      "birthtimeMs": 1746343376650.715,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctimeMs": 1746343376650.7883,
                                      "dev": 16777232,
                                      "gid": 20,
                                      "ino": 76011303,
                                      "mode": 16877,
                                      "mtimeMs": 1746343376650.7883,
                                      "nlink": 3,
                                      "rdev": 0,
                                      "size": 96,
                                      "uid": 501,
                                    },
                                    "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                              "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                              "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                              "s3Url": "\${Token[TOKEN.24]}",
                              "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectVersion": undefined,
                                  "sourceKmsKeyArn": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": undefined,
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.13]}",
                                "handler": "index.certificateRequestHandler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.26]}",
                                ],
                                "loggingConfig": undefined,
                                "memorySize": undefined,
                                "packageType": undefined,
                                "recursiveLoop": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.21]}",
                                "runtime": "nodejs20.x",
                                "runtimeManagementConfig": undefined,
                                "snapStart": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.28]}",
                              "attrSnapStartResponse": "<unresolved-token>",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3ObjectVersion": undefined,
                                "sourceKmsKeyArn": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": undefined,
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.13]}",
                              "handler": "index.certificateRequestHandler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.26]}",
                              ],
                              "loggingConfig": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": false,
                                    "_didSplit": false,
                                    "_physicalName": undefined,
                                    "_roleId": "\${Token[TOKEN.20]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportServiceRole": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportServiceRole",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.16]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "0000000000",
                                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                          "roleName": "ServiceRole",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.17]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.14]}",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.19]}",
                                          "attrRoleId": "\${Token[TOKEN.20]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.17]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "\${Token[TOKEN.14]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "didHaveInitialTags": false,
                                            "externalTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          "tagsRaw": undefined,
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "\${Token[TOKEN.14]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.21]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "\${Token[TOKEN.21]}",
                                    "roleName": "\${Token[TOKEN.23]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "recursiveLoop": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.21]}",
                              "runtime": "nodejs20.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ServiceRole": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.20]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.16]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.14]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.19]}",
                                    "attrRoleId": "\${Token[TOKEN.20]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.14]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "didHaveInitialTags": false,
                                      "externalTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    "tagsRaw": undefined,
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.14]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.21]}",
                                  ],
                                },
                              },
                              "principalAccount": "0000000000",
                              "roleArn": "\${Token[TOKEN.21]}",
                              "roleName": "\${Token[TOKEN.23]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": 0,
                              "trace": undefined,
                              "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "CertificateRequestorFunction",
                          "scope": [Circular],
                        },
                        "permissionsNode": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.25]}",
                                "policy": undefined,
                                "replicationRoleArn": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.24]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                    "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                    "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                    "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.25]}",
                                    "policy": undefined,
                                    "replicationRoleArn": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                    "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "deployTime": true,
                                      "exclude": [
                                        ".is_custom_resource",
                                      ],
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                    "sourceStats": Stats {
                                      "atimeMs": 1746343388554.7612,
                                      "birthtimeMs": 1746343376650.715,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctimeMs": 1746343376650.7883,
                                      "dev": 16777232,
                                      "gid": 20,
                                      "ino": 76011303,
                                      "mode": 16877,
                                      "mtimeMs": 1746343376650.7883,
                                      "nlink": 3,
                                      "rdev": 0,
                                      "size": 96,
                                      "uid": 501,
                                    },
                                    "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                              "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                              "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                              "s3Url": "\${Token[TOKEN.24]}",
                              "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectVersion": undefined,
                                  "sourceKmsKeyArn": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": undefined,
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.13]}",
                                "handler": "index.certificateRequestHandler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.26]}",
                                ],
                                "loggingConfig": undefined,
                                "memorySize": undefined,
                                "packageType": undefined,
                                "recursiveLoop": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.21]}",
                                "runtime": "nodejs20.x",
                                "runtimeManagementConfig": undefined,
                                "snapStart": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.28]}",
                              "attrSnapStartResponse": "<unresolved-token>",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3ObjectVersion": undefined,
                                "sourceKmsKeyArn": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": undefined,
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.13]}",
                              "handler": "index.certificateRequestHandler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.26]}",
                              ],
                              "loggingConfig": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": false,
                                    "_didSplit": false,
                                    "_physicalName": undefined,
                                    "_roleId": "\${Token[TOKEN.20]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportServiceRole": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportServiceRole",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.16]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "0000000000",
                                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                          "roleName": "ServiceRole",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.17]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.14]}",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.19]}",
                                          "attrRoleId": "\${Token[TOKEN.20]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.17]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "\${Token[TOKEN.14]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "didHaveInitialTags": false,
                                            "externalTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          "tagsRaw": undefined,
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "\${Token[TOKEN.14]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.21]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "\${Token[TOKEN.21]}",
                                    "roleName": "\${Token[TOKEN.23]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "recursiveLoop": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.21]}",
                              "runtime": "nodejs20.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ServiceRole": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.20]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.16]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.14]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.19]}",
                                    "attrRoleId": "\${Token[TOKEN.20]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.14]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "didHaveInitialTags": false,
                                      "externalTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    "tagsRaw": undefined,
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.14]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.21]}",
                                  ],
                                },
                              },
                              "principalAccount": "0000000000",
                              "roleArn": "\${Token[TOKEN.21]}",
                              "roleName": "\${Token[TOKEN.23]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": 0,
                              "trace": undefined,
                              "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "CertificateRequestorFunction",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.13]}",
                        "role": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.20]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.34]}",
                            "_policyName": "\${Token[TOKEN.34]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "0000000000",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.37]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.34]}",
                                    "roles": [
                                      "#{Token[TOKEN.35]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.36]}",
                                    ],
                                  },
                                  "attrId": "\${Token[TOKEN.39]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.37]}",
                                  ],
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.34]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.35]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.36]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.34]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": [
                                "acm:RequestCertificate",
                                "acm:DescribeCertificate",
                                "acm:DeleteCertificate",
                                "acm:AddTagsToCertificate",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "route53:GetChange",
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "route53:changeResourceRecordSets",
                              "Condition": {
                                "ForAllValues:StringEquals": {
                                  "route53:ChangeResourceRecordSetsActions": [
                                    "UPSERT",
                                  ],
                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                    "CNAME",
                                  ],
                                },
                                "ForAllValues:StringLike": {
                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                    "*.app.s0na.de",
                                  ],
                                },
                              },
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.16]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    ],
                                  },
                                },
                                "principalAccount": "0000000000",
                                "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.17]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.14]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.19]}",
                                "attrRoleId": "\${Token[TOKEN.20]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.17]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.14]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "didHaveInitialTags": false,
                                  "externalTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                "tagsRaw": undefined,
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.14]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.21]}",
                              ],
                            },
                          },
                          "principalAccount": "0000000000",
                          "roleArn": "\${Token[TOKEN.21]}",
                          "roleName": "\${Token[TOKEN.23]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "runtime": Runtime {
                          "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
                          "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
                          "family": 0,
                          "isVariable": true,
                          "name": "nodejs20.x",
                          "supportsCodeGuruProfiling": false,
                          "supportsInlineCode": true,
                          "supportsSnapStart": false,
                        },
                        "stack": [Circular],
                        "timeout": Duration {
                          "amount": 15,
                          "unit": TimeUnit {
                            "inMillis": 60000,
                            "isoLabel": "M",
                            "label": "minutes",
                          },
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "CertificateRequestorResource": CustomResource {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "node": Node {
                          "_children": {
                            "Default": CfnResource {
                              "_cfnProperties": {
                                "CertificateTransparencyLoggingPreference": undefined,
                                "CleanupRecords": undefined,
                                "DomainName": "app.s0na.de",
                                "HostedZoneId": "DUMMY",
                                "Region": "us-east-1",
                                "RemovalPolicy": "<unresolved-lazy>",
                                "Route53Endpoint": undefined,
                                "ServiceTimeout": undefined,
                                "ServiceToken": "\${Token[TOKEN.33]}",
                                "SubjectAlternativeNames": [
                                  "#{Token[TOKEN.40]}",
                                ],
                                "Tags": [
                                  "#{Token[TOKEN.41]}",
                                ],
                              },
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::CloudFormation::CustomResource",
                              "dependsOn": Set {},
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Default",
                                "scope": [Circular],
                              },
                              "rawOverrides": {},
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "CertificateRequestorResource",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.42]}",
                        "resource": CfnResource {
                          "_cfnProperties": {
                            "CertificateTransparencyLoggingPreference": undefined,
                            "CleanupRecords": undefined,
                            "DomainName": "app.s0na.de",
                            "HostedZoneId": "DUMMY",
                            "Region": "us-east-1",
                            "RemovalPolicy": "<unresolved-lazy>",
                            "Route53Endpoint": undefined,
                            "ServiceTimeout": undefined,
                            "ServiceToken": "\${Token[TOKEN.33]}",
                            "SubjectAlternativeNames": [
                              "#{Token[TOKEN.40]}",
                            ],
                            "Tags": [
                              "#{Token[TOKEN.41]}",
                            ],
                          },
                          "cfnOptions": {
                            "deletionPolicy": "Delete",
                            "updateReplacePolicy": "Delete",
                          },
                          "cfnResourceType": "AWS::CloudFormation::CustomResource",
                          "dependsOn": Set {},
                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Default",
                            "scope": [Circular],
                          },
                          "rawOverrides": {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "Certificate",
                    "scope": [Circular],
                  },
                  "normalizedZoneName": "s0na.de",
                  "physicalName": "\${Token[TOKEN.12]}",
                  "region": "us-east-1",
                  "stack": [Circular],
                  "tags": TagManager {
                    "didHaveInitialTags": false,
                    "externalTagPriority": 50,
                    "priorities": Map {},
                    "renderedTags": "<unresolved-lazy>",
                    "resourceTypeName": "AWS::CertificateManager::Certificate",
                    "tagFormatter": MapFormatter {},
                    "tagPropertyName": "tags",
                    "tags": Map {},
                  },
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "defaultBehavior": CacheBehavior {
                  "originId": "NextJsAppHostedBucketDistributionOrigin148025831",
                  "props": {
                    "cachePolicy": CachePolicy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "cachePolicyId": "\${Token[TOKEN.63]}",
                      "env": {
                        "account": "0000000000",
                        "region": "eu-central-1",
                      },
                      "node": Node {
                        "_children": {
                          "Resource": CfnCachePolicy {
                            "_cfnProperties": {
                              "cachePolicyConfig": {
                                "comment": "Cache HostedBucket Bucket",
                                "defaultTtl": 2592000,
                                "maxTtl": 2592000,
                                "minTtl": 2592000,
                                "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                                "parametersInCacheKeyAndForwardedToOrigin": {
                                  "cookiesConfig": {
                                    "cookieBehavior": "none",
                                    "cookies": undefined,
                                  },
                                  "enableAcceptEncodingBrotli": false,
                                  "enableAcceptEncodingGzip": false,
                                  "headersConfig": {
                                    "headerBehavior": "none",
                                    "headers": undefined,
                                  },
                                  "queryStringsConfig": {
                                    "queryStringBehavior": "none",
                                    "queryStrings": undefined,
                                  },
                                },
                              },
                            },
                            "attrId": "\${Token[TOKEN.61]}",
                            "attrLastModifiedTime": "\${Token[TOKEN.62]}",
                            "cachePolicyConfig": {
                              "comment": "Cache HostedBucket Bucket",
                              "defaultTtl": 2592000,
                              "maxTtl": 2592000,
                              "minTtl": 2592000,
                              "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                              "parametersInCacheKeyAndForwardedToOrigin": {
                                "cookiesConfig": {
                                  "cookieBehavior": "none",
                                  "cookies": undefined,
                                },
                                "enableAcceptEncodingBrotli": false,
                                "enableAcceptEncodingGzip": false,
                                "headersConfig": {
                                  "headerBehavior": "none",
                                  "headers": undefined,
                                },
                                "queryStringsConfig": {
                                  "queryStringBehavior": "none",
                                  "queryStrings": undefined,
                                },
                              },
                            },
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::CloudFront::CachePolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "CachePolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.59]}",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "compress": true,
                    "origin": S3BucketOriginWithOAC {
                      "bucket": Bucket {
                        "_allowCrossEnvironment": true,
                        "_physicalName": "static.assets",
                        "_resource": CfnBucket {
                          "_cfnProperties": {
                            "accelerateConfiguration": undefined,
                            "accessControl": "\${Token[TOKEN.45]}",
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "bucketKeyEnabled": undefined,
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "AES256",
                                  },
                                },
                              ],
                            },
                            "bucketName": "static.assets",
                            "corsConfiguration": "<unresolved-lazy>",
                            "intelligentTieringConfigurations": undefined,
                            "inventoryConfigurations": "<unresolved-lazy>",
                            "lifecycleConfiguration": "<unresolved-lazy>",
                            "loggingConfiguration": undefined,
                            "metricsConfigurations": "<unresolved-lazy>",
                            "objectLockConfiguration": undefined,
                            "objectLockEnabled": undefined,
                            "ownershipControls": "<unresolved-lazy>",
                            "publicAccessBlockConfiguration": BlockPublicAccess {
                              "blockPublicAcls": true,
                              "blockPublicPolicy": true,
                              "ignorePublicAcls": true,
                              "restrictPublicBuckets": true,
                            },
                            "replicationConfiguration": undefined,
                            "versioningConfiguration": undefined,
                            "websiteConfiguration": {
                              "errorDocument": "index.html",
                              "indexDocument": "index.html",
                              "redirectAllRequestsTo": undefined,
                              "routingRules": undefined,
                            },
                          },
                          "accelerateConfiguration": undefined,
                          "accessControl": "\${Token[TOKEN.45]}",
                          "analyticsConfigurations": undefined,
                          "attrArn": "\${Token[TOKEN.47]}",
                          "attrDomainName": "\${Token[TOKEN.48]}",
                          "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                          "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                          "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                          "bucketEncryption": {
                            "serverSideEncryptionConfiguration": [
                              {
                                "bucketKeyEnabled": undefined,
                                "serverSideEncryptionByDefault": {
                                  "sseAlgorithm": "AES256",
                                },
                              },
                            ],
                          },
                          "bucketName": "static.assets",
                          "cfnOptions": {
                            "deletionPolicy": "Delete",
                            "updateReplacePolicy": "Delete",
                          },
                          "cfnResourceType": "AWS::S3::Bucket",
                          "corsConfiguration": "<unresolved-lazy>",
                          "dependsOn": Set {},
                          "intelligentTieringConfigurations": undefined,
                          "inventoryConfigurations": "<unresolved-lazy>",
                          "lifecycleConfiguration": "<unresolved-lazy>",
                          "loggingConfiguration": undefined,
                          "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                          "metadataTableConfiguration": undefined,
                          "metricsConfigurations": "<unresolved-lazy>",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "notificationConfiguration": undefined,
                          "objectLockConfiguration": undefined,
                          "objectLockEnabled": undefined,
                          "ownershipControls": "<unresolved-lazy>",
                          "publicAccessBlockConfiguration": BlockPublicAccess {
                            "blockPublicAcls": true,
                            "blockPublicPolicy": true,
                            "ignorePublicAcls": true,
                            "restrictPublicBuckets": true,
                          },
                          "rawOverrides": {},
                          "replicationConfiguration": undefined,
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::S3::Bucket",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          "versioningConfiguration": undefined,
                          "websiteConfiguration": {
                            "errorDocument": "index.html",
                            "indexDocument": "index.html",
                            "redirectAllRequestsTo": undefined,
                            "routingRules": undefined,
                          },
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "accessControl": undefined,
                        "autoCreatePolicy": true,
                        "bucketArn": "\${Token[TOKEN.56]}",
                        "bucketDomainName": "\${Token[TOKEN.48]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                        "bucketName": "\${Token[TOKEN.55]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                        "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                        "cors": [
                          {
                            "allowedHeaders": [
                              "*",
                            ],
                            "allowedMethods": [
                              "GET",
                              "HEAD",
                            ],
                            "allowedOrigins": [
                              "*",
                            ],
                            "maxAge": 300,
                          },
                        ],
                        "disallowPublicAccess": true,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "eventBridgeEnabled": undefined,
                        "inventories": [],
                        "isWebsite": true,
                        "lifecycleRules": [
                          {
                            "abortIncompleteMultipartUploadAfter": Duration {
                              "amount": 1,
                              "unit": TimeUnit {
                                "inMillis": 86400000,
                                "isoLabel": "D",
                                "label": "days",
                              },
                            },
                            "id": "AbortIncompleteMultipartUploadAfter",
                          },
                        ],
                        "metrics": [],
                        "node": Node {
                          "_children": {
                            "Policy": BucketPolicy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "bucket": [Circular],
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "node": Node {
                                "_children": {
                                  "Resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Policy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.79]}",
                              "resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnBucket {
                              "_cfnProperties": {
                                "accelerateConfiguration": undefined,
                                "accessControl": "\${Token[TOKEN.45]}",
                                "bucketEncryption": {
                                  "serverSideEncryptionConfiguration": [
                                    {
                                      "bucketKeyEnabled": undefined,
                                      "serverSideEncryptionByDefault": {
                                        "sseAlgorithm": "AES256",
                                      },
                                    },
                                  ],
                                },
                                "bucketName": "static.assets",
                                "corsConfiguration": "<unresolved-lazy>",
                                "intelligentTieringConfigurations": undefined,
                                "inventoryConfigurations": "<unresolved-lazy>",
                                "lifecycleConfiguration": "<unresolved-lazy>",
                                "loggingConfiguration": undefined,
                                "metricsConfigurations": "<unresolved-lazy>",
                                "objectLockConfiguration": undefined,
                                "objectLockEnabled": undefined,
                                "ownershipControls": "<unresolved-lazy>",
                                "publicAccessBlockConfiguration": BlockPublicAccess {
                                  "blockPublicAcls": true,
                                  "blockPublicPolicy": true,
                                  "ignorePublicAcls": true,
                                  "restrictPublicBuckets": true,
                                },
                                "replicationConfiguration": undefined,
                                "versioningConfiguration": undefined,
                                "websiteConfiguration": {
                                  "errorDocument": "index.html",
                                  "indexDocument": "index.html",
                                  "redirectAllRequestsTo": undefined,
                                  "routingRules": undefined,
                                },
                              },
                              "accelerateConfiguration": undefined,
                              "accessControl": "\${Token[TOKEN.45]}",
                              "analyticsConfigurations": undefined,
                              "attrArn": "\${Token[TOKEN.47]}",
                              "attrDomainName": "\${Token[TOKEN.48]}",
                              "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                              "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                              "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                              "bucketEncryption": {
                                "serverSideEncryptionConfiguration": [
                                  {
                                    "bucketKeyEnabled": undefined,
                                    "serverSideEncryptionByDefault": {
                                      "sseAlgorithm": "AES256",
                                    },
                                  },
                                ],
                              },
                              "bucketName": "static.assets",
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::S3::Bucket",
                              "corsConfiguration": "<unresolved-lazy>",
                              "dependsOn": Set {},
                              "intelligentTieringConfigurations": undefined,
                              "inventoryConfigurations": "<unresolved-lazy>",
                              "lifecycleConfiguration": "<unresolved-lazy>",
                              "loggingConfiguration": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                              "metadataTableConfiguration": undefined,
                              "metricsConfigurations": "<unresolved-lazy>",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "notificationConfiguration": undefined,
                              "objectLockConfiguration": undefined,
                              "objectLockEnabled": undefined,
                              "ownershipControls": "<unresolved-lazy>",
                              "publicAccessBlockConfiguration": BlockPublicAccess {
                                "blockPublicAcls": true,
                                "blockPublicPolicy": true,
                                "ignorePublicAcls": true,
                                "restrictPublicBuckets": true,
                              },
                              "rawOverrides": {},
                              "replicationConfiguration": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::S3::Bucket",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "versioningConfiguration": undefined,
                              "websiteConfiguration": {
                                "errorDocument": "index.html",
                                "indexDocument": "index.html",
                                "redirectAllRequestsTo": undefined,
                                "routingRules": undefined,
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "Bucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "notificationsSkipDestinationValidation": undefined,
                        "objectOwnership": undefined,
                        "physicalName": "static.assets",
                        "policy": BucketPolicy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "bucket": [Circular],
                          "document": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "node": Node {
                            "_children": {
                              "Resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Policy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.79]}",
                          "resource": CfnBucketPolicy {
                            "_cfnProperties": {
                              "bucket": "\${Token[TOKEN.55]}",
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                            },
                            "bucket": "\${Token[TOKEN.55]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::S3::BucketPolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Condition": {
                                    "StringEquals": {
                                      "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                  },
                                  "Resource": "\${Token[TOKEN.56]}/*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "replicationRoleArn": undefined,
                        "stack": [Circular],
                        "transitionDefaultMinimumObjectSize": undefined,
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "connectionAttempts": undefined,
                      "connectionTimeout": undefined,
                      "customHeaders": undefined,
                      "domainName": "\${Token[TOKEN.52]}",
                      "originAccessControl": S3OriginAccessControl {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "env": {
                          "account": "0000000000",
                          "region": "eu-central-1",
                        },
                        "node": Node {
                          "_children": {
                            "Resource": CfnOriginAccessControl {
                              "_cfnProperties": {
                                "originAccessControlConfig": {
                                  "description": undefined,
                                  "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                  "originAccessControlOriginType": "s3",
                                  "signingBehavior": "always",
                                  "signingProtocol": "sigv4",
                                },
                              },
                              "attrId": "\${Token[TOKEN.77]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                              "dependsOn": Set {},
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "originAccessControlConfig": {
                                "description": undefined,
                                "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                "originAccessControlOriginType": "s3",
                                "signingBehavior": "always",
                                "signingProtocol": "sigv4",
                              },
                              "rawOverrides": {},
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "S3OriginAccessControl",
                          "scope": Construct {
                            "node": Node {
                              "_children": {
                                "S3OriginAccessControl": [Circular],
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Origin1",
                              "scope": [Circular],
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "originAccessControlId": "\${Token[TOKEN.77]}",
                        "physicalName": "\${Token[TOKEN.75]}",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "originAccessControlId": undefined,
                      "originAccessLevels": undefined,
                      "originId": undefined,
                      "originPath": undefined,
                      "originShieldEnabled": true,
                      "originShieldRegion": undefined,
                    },
                    "pathPattern": "*",
                    "viewerProtocolPolicy": "redirect-to-https",
                  },
                },
                "distributionDomainName": "\${Token[TOKEN.83]}",
                "distributionId": "\${Token[TOKEN.85]}",
                "domainName": "\${Token[TOKEN.83]}",
                "env": {
                  "account": "0000000000",
                  "region": "eu-central-1",
                },
                "errorResponses": [
                  {
                    "httpStatus": 403,
                    "responseHttpStatus": 200,
                    "responsePagePath": "index.html",
                  },
                  {
                    "httpStatus": 404,
                    "responseHttpStatus": 200,
                    "responsePagePath": "index.html",
                  },
                ],
                "httpVersion": "http2and3",
                "node": Node {
                  "_children": {
                    "Origin1": Construct {
                      "node": Node {
                        "_children": {
                          "S3OriginAccessControl": S3OriginAccessControl {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "node": Node {
                              "_children": {
                                "Resource": CfnOriginAccessControl {
                                  "_cfnProperties": {
                                    "originAccessControlConfig": {
                                      "description": undefined,
                                      "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                      "originAccessControlOriginType": "s3",
                                      "signingBehavior": "always",
                                      "signingProtocol": "sigv4",
                                    },
                                  },
                                  "attrId": "\${Token[TOKEN.77]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                                  "dependsOn": Set {},
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "originAccessControlConfig": {
                                    "description": undefined,
                                    "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                    "originAccessControlOriginType": "s3",
                                    "signingBehavior": "always",
                                    "signingProtocol": "sigv4",
                                  },
                                  "rawOverrides": {},
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "S3OriginAccessControl",
                              "scope": [Circular],
                            },
                            "originAccessControlId": "\${Token[TOKEN.77]}",
                            "physicalName": "\${Token[TOKEN.75]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Origin1",
                        "scope": [Circular],
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnDistribution {
                      "_cfnProperties": {
                        "distributionConfig": {
                          "aliases": [
                            "app.s0na.de",
                          ],
                          "cacheBehaviors": "<unresolved-lazy>",
                          "comment": "HostedBucket",
                          "customErrorResponses": [
                            {
                              "errorCachingMinTtl": undefined,
                              "errorCode": 403,
                              "responseCode": 200,
                              "responsePagePath": "index.html",
                            },
                            {
                              "errorCachingMinTtl": undefined,
                              "errorCode": 404,
                              "responseCode": 200,
                              "responsePagePath": "index.html",
                            },
                          ],
                          "defaultCacheBehavior": {
                            "allowedMethods": undefined,
                            "cachePolicyId": "\${Token[TOKEN.63]}",
                            "cachedMethods": undefined,
                            "compress": true,
                            "functionAssociations": undefined,
                            "grpcConfig": undefined,
                            "lambdaFunctionAssociations": undefined,
                            "originRequestPolicyId": undefined,
                            "pathPattern": "*",
                            "realtimeLogConfigArn": undefined,
                            "responseHeadersPolicyId": undefined,
                            "smoothStreaming": undefined,
                            "targetOriginId": "NextJsAppHostedBucketDistributionOrigin148025831",
                            "trustedKeyGroups": undefined,
                            "viewerProtocolPolicy": "redirect-to-https",
                          },
                          "defaultRootObject": undefined,
                          "enabled": true,
                          "httpVersion": "http2and3",
                          "ipv6Enabled": true,
                          "logging": undefined,
                          "originGroups": "<unresolved-lazy>",
                          "origins": "<unresolved-lazy>",
                          "priceClass": "PriceClass_100",
                          "restrictions": undefined,
                          "viewerCertificate": {
                            "acmCertificateArn": "\${Token[Default.Arn.44]}",
                            "minimumProtocolVersion": "TLSv1.2_2021",
                            "sslSupportMethod": "sni-only",
                          },
                          "webAclId": "\${Token[TOKEN.81]}",
                        },
                      },
                      "attrDomainName": "\${Token[TOKEN.83]}",
                      "attrId": "\${Token[TOKEN.84]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::CloudFront::Distribution",
                      "dependsOn": Set {},
                      "distributionConfig": {
                        "aliases": [
                          "app.s0na.de",
                        ],
                        "cacheBehaviors": "<unresolved-lazy>",
                        "comment": "HostedBucket",
                        "customErrorResponses": [
                          {
                            "errorCachingMinTtl": undefined,
                            "errorCode": 403,
                            "responseCode": 200,
                            "responsePagePath": "index.html",
                          },
                          {
                            "errorCachingMinTtl": undefined,
                            "errorCode": 404,
                            "responseCode": 200,
                            "responsePagePath": "index.html",
                          },
                        ],
                        "defaultCacheBehavior": {
                          "allowedMethods": undefined,
                          "cachePolicyId": "\${Token[TOKEN.63]}",
                          "cachedMethods": undefined,
                          "compress": true,
                          "functionAssociations": undefined,
                          "grpcConfig": undefined,
                          "lambdaFunctionAssociations": undefined,
                          "originRequestPolicyId": undefined,
                          "pathPattern": "*",
                          "realtimeLogConfigArn": undefined,
                          "responseHeadersPolicyId": undefined,
                          "smoothStreaming": undefined,
                          "targetOriginId": "NextJsAppHostedBucketDistributionOrigin148025831",
                          "trustedKeyGroups": undefined,
                          "viewerProtocolPolicy": "redirect-to-https",
                        },
                        "defaultRootObject": undefined,
                        "enabled": true,
                        "httpVersion": "http2and3",
                        "ipv6Enabled": true,
                        "logging": undefined,
                        "originGroups": "<unresolved-lazy>",
                        "origins": "<unresolved-lazy>",
                        "priceClass": "PriceClass_100",
                        "restrictions": undefined,
                        "viewerCertificate": {
                          "acmCertificateArn": "\${Token[Default.Arn.44]}",
                          "minimumProtocolVersion": "TLSv1.2_2021",
                          "sslSupportMethod": "sni-only",
                        },
                        "webAclId": "\${Token[TOKEN.81]}",
                      },
                      "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Resource.LogicalID.82]}",
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[NextJsApp.HostedBucket.Distribution.Resource.LogicalID.82]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "rawOverrides": {},
                      "stack": [Circular],
                      "tags": TagManager {
                        "didHaveInitialTags": false,
                        "externalTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::CloudFront::Distribution",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "tagsRaw": undefined,
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Distribution",
                  "scope": [Circular],
                },
                "originGroups": [],
                "physicalName": "\${Token[TOKEN.64]}",
                "publishAdditionalMetrics": undefined,
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "node": Node {
                "_children": {
                  "ARecord": ARecord {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "domainName": "\${Token[TOKEN.91]}",
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "geoLocation": undefined,
                    "multiValueAnswer": undefined,
                    "node": Node {
                      "_children": {
                        "Resource": CfnRecordSet {
                          "_cfnProperties": {
                            "aliasTarget": {
                              "dnsName": "\${Token[TOKEN.83]}",
                              "hostedZoneId": "\${Token[TOKEN.88]}",
                            },
                            "comment": undefined,
                            "geoLocation": undefined,
                            "healthCheckId": undefined,
                            "hostedZoneId": "DUMMY",
                            "multiValueAnswer": undefined,
                            "name": "app.s0na.de.",
                            "region": undefined,
                            "resourceRecords": undefined,
                            "setIdentifier": undefined,
                            "ttl": undefined,
                            "type": "A",
                            "weight": undefined,
                          },
                          "aliasTarget": {
                            "dnsName": "\${Token[TOKEN.83]}",
                            "hostedZoneId": "\${Token[TOKEN.88]}",
                          },
                          "attrId": "\${Token[TOKEN.90]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::Route53::RecordSet",
                          "cidrRoutingConfig": undefined,
                          "comment": undefined,
                          "dependsOn": Set {},
                          "failover": undefined,
                          "geoLocation": undefined,
                          "geoProximityLocation": undefined,
                          "healthCheckId": undefined,
                          "hostedZoneId": "DUMMY",
                          "hostedZoneName": undefined,
                          "logicalId": "\${Token[NextJsApp.HostedBucket.ARecord.Resource.LogicalID.89]}",
                          "multiValueAnswer": undefined,
                          "name": "app.s0na.de.",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.ARecord.Resource.LogicalID.89]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "rawOverrides": {},
                          "region": undefined,
                          "resourceRecords": undefined,
                          "setIdentifier": undefined,
                          "stack": [Circular],
                          "ttl": undefined,
                          "type": "A",
                          "weight": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "ARecord",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.86]}",
                    "region": undefined,
                    "stack": [Circular],
                    "weight": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "AccessKeyId": CfnOutput {
                    "_condition": undefined,
                    "_description": undefined,
                    "_exportName": undefined,
                    "_key": "AccessKeyId",
                    "_value": "\${Token[TOKEN.103]}",
                    "logicalId": "\${Token[NextJsApp.HostedBucket.AccessKeyId.LogicalID.110]}",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[NextJsApp.HostedBucket.AccessKeyId.LogicalID.110]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "AccessKeyId",
                      "scope": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Bucket": Bucket {
                    "_allowCrossEnvironment": true,
                    "_physicalName": "static.assets",
                    "_resource": CfnBucket {
                      "_cfnProperties": {
                        "accelerateConfiguration": undefined,
                        "accessControl": "\${Token[TOKEN.45]}",
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "bucketKeyEnabled": undefined,
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "AES256",
                              },
                            },
                          ],
                        },
                        "bucketName": "static.assets",
                        "corsConfiguration": "<unresolved-lazy>",
                        "intelligentTieringConfigurations": undefined,
                        "inventoryConfigurations": "<unresolved-lazy>",
                        "lifecycleConfiguration": "<unresolved-lazy>",
                        "loggingConfiguration": undefined,
                        "metricsConfigurations": "<unresolved-lazy>",
                        "objectLockConfiguration": undefined,
                        "objectLockEnabled": undefined,
                        "ownershipControls": "<unresolved-lazy>",
                        "publicAccessBlockConfiguration": BlockPublicAccess {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true,
                        },
                        "replicationConfiguration": undefined,
                        "versioningConfiguration": undefined,
                        "websiteConfiguration": {
                          "errorDocument": "index.html",
                          "indexDocument": "index.html",
                          "redirectAllRequestsTo": undefined,
                          "routingRules": undefined,
                        },
                      },
                      "accelerateConfiguration": undefined,
                      "accessControl": "\${Token[TOKEN.45]}",
                      "analyticsConfigurations": undefined,
                      "attrArn": "\${Token[TOKEN.47]}",
                      "attrDomainName": "\${Token[TOKEN.48]}",
                      "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                      "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                      "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                      "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                      "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                      "bucketEncryption": {
                        "serverSideEncryptionConfiguration": [
                          {
                            "bucketKeyEnabled": undefined,
                            "serverSideEncryptionByDefault": {
                              "sseAlgorithm": "AES256",
                            },
                          },
                        ],
                      },
                      "bucketName": "static.assets",
                      "cfnOptions": {
                        "deletionPolicy": "Delete",
                        "updateReplacePolicy": "Delete",
                      },
                      "cfnResourceType": "AWS::S3::Bucket",
                      "corsConfiguration": "<unresolved-lazy>",
                      "dependsOn": Set {},
                      "intelligentTieringConfigurations": undefined,
                      "inventoryConfigurations": "<unresolved-lazy>",
                      "lifecycleConfiguration": "<unresolved-lazy>",
                      "loggingConfiguration": undefined,
                      "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                      "metadataTableConfiguration": undefined,
                      "metricsConfigurations": "<unresolved-lazy>",
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "notificationConfiguration": undefined,
                      "objectLockConfiguration": undefined,
                      "objectLockEnabled": undefined,
                      "ownershipControls": "<unresolved-lazy>",
                      "publicAccessBlockConfiguration": BlockPublicAccess {
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true,
                      },
                      "rawOverrides": {},
                      "replicationConfiguration": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "didHaveInitialTags": false,
                        "externalTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::S3::Bucket",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "tagsRaw": undefined,
                      "versioningConfiguration": undefined,
                      "websiteConfiguration": {
                        "errorDocument": "index.html",
                        "indexDocument": "index.html",
                        "redirectAllRequestsTo": undefined,
                        "routingRules": undefined,
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "accessControl": undefined,
                    "autoCreatePolicy": true,
                    "bucketArn": "\${Token[TOKEN.56]}",
                    "bucketDomainName": "\${Token[TOKEN.48]}",
                    "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                    "bucketName": "\${Token[TOKEN.55]}",
                    "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                    "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                    "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                    "cors": [
                      {
                        "allowedHeaders": [
                          "*",
                        ],
                        "allowedMethods": [
                          "GET",
                          "HEAD",
                        ],
                        "allowedOrigins": [
                          "*",
                        ],
                        "maxAge": 300,
                      },
                    ],
                    "disallowPublicAccess": true,
                    "encryptionKey": undefined,
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "eventBridgeEnabled": undefined,
                    "inventories": [],
                    "isWebsite": true,
                    "lifecycleRules": [
                      {
                        "abortIncompleteMultipartUploadAfter": Duration {
                          "amount": 1,
                          "unit": TimeUnit {
                            "inMillis": 86400000,
                            "isoLabel": "D",
                            "label": "days",
                          },
                        },
                        "id": "AbortIncompleteMultipartUploadAfter",
                      },
                    ],
                    "metrics": [],
                    "node": Node {
                      "_children": {
                        "Policy": BucketPolicy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "bucket": [Circular],
                          "document": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "node": Node {
                            "_children": {
                              "Resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Policy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.79]}",
                          "resource": CfnBucketPolicy {
                            "_cfnProperties": {
                              "bucket": "\${Token[TOKEN.55]}",
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                            },
                            "bucket": "\${Token[TOKEN.55]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::S3::BucketPolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Condition": {
                                    "StringEquals": {
                                      "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                  },
                                  "Resource": "\${Token[TOKEN.56]}/*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnBucket {
                          "_cfnProperties": {
                            "accelerateConfiguration": undefined,
                            "accessControl": "\${Token[TOKEN.45]}",
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "bucketKeyEnabled": undefined,
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "AES256",
                                  },
                                },
                              ],
                            },
                            "bucketName": "static.assets",
                            "corsConfiguration": "<unresolved-lazy>",
                            "intelligentTieringConfigurations": undefined,
                            "inventoryConfigurations": "<unresolved-lazy>",
                            "lifecycleConfiguration": "<unresolved-lazy>",
                            "loggingConfiguration": undefined,
                            "metricsConfigurations": "<unresolved-lazy>",
                            "objectLockConfiguration": undefined,
                            "objectLockEnabled": undefined,
                            "ownershipControls": "<unresolved-lazy>",
                            "publicAccessBlockConfiguration": BlockPublicAccess {
                              "blockPublicAcls": true,
                              "blockPublicPolicy": true,
                              "ignorePublicAcls": true,
                              "restrictPublicBuckets": true,
                            },
                            "replicationConfiguration": undefined,
                            "versioningConfiguration": undefined,
                            "websiteConfiguration": {
                              "errorDocument": "index.html",
                              "indexDocument": "index.html",
                              "redirectAllRequestsTo": undefined,
                              "routingRules": undefined,
                            },
                          },
                          "accelerateConfiguration": undefined,
                          "accessControl": "\${Token[TOKEN.45]}",
                          "analyticsConfigurations": undefined,
                          "attrArn": "\${Token[TOKEN.47]}",
                          "attrDomainName": "\${Token[TOKEN.48]}",
                          "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                          "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                          "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                          "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                          "bucketEncryption": {
                            "serverSideEncryptionConfiguration": [
                              {
                                "bucketKeyEnabled": undefined,
                                "serverSideEncryptionByDefault": {
                                  "sseAlgorithm": "AES256",
                                },
                              },
                            ],
                          },
                          "bucketName": "static.assets",
                          "cfnOptions": {
                            "deletionPolicy": "Delete",
                            "updateReplacePolicy": "Delete",
                          },
                          "cfnResourceType": "AWS::S3::Bucket",
                          "corsConfiguration": "<unresolved-lazy>",
                          "dependsOn": Set {},
                          "intelligentTieringConfigurations": undefined,
                          "inventoryConfigurations": "<unresolved-lazy>",
                          "lifecycleConfiguration": "<unresolved-lazy>",
                          "loggingConfiguration": undefined,
                          "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                          "metadataTableConfiguration": undefined,
                          "metricsConfigurations": "<unresolved-lazy>",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "notificationConfiguration": undefined,
                          "objectLockConfiguration": undefined,
                          "objectLockEnabled": undefined,
                          "ownershipControls": "<unresolved-lazy>",
                          "publicAccessBlockConfiguration": BlockPublicAccess {
                            "blockPublicAcls": true,
                            "blockPublicPolicy": true,
                            "ignorePublicAcls": true,
                            "restrictPublicBuckets": true,
                          },
                          "rawOverrides": {},
                          "replicationConfiguration": undefined,
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::S3::Bucket",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          "versioningConfiguration": undefined,
                          "websiteConfiguration": {
                            "errorDocument": "index.html",
                            "indexDocument": "index.html",
                            "redirectAllRequestsTo": undefined,
                            "routingRules": undefined,
                          },
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "Bucket",
                      "scope": [Circular],
                    },
                    "notificationsHandlerRole": undefined,
                    "notificationsSkipDestinationValidation": undefined,
                    "objectOwnership": undefined,
                    "physicalName": "static.assets",
                    "policy": BucketPolicy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "bucket": [Circular],
                      "document": {
                        "Statement": [
                          {
                            "Action": "s3:GetObject",
                            "Condition": {
                              "StringEquals": {
                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                              },
                            },
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                            },
                            "Resource": "\${Token[TOKEN.56]}/*",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "0000000000",
                        "region": "eu-central-1",
                      },
                      "node": Node {
                        "_children": {
                          "Resource": CfnBucketPolicy {
                            "_cfnProperties": {
                              "bucket": "\${Token[TOKEN.55]}",
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                            },
                            "bucket": "\${Token[TOKEN.55]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::S3::BucketPolicy",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:GetObject",
                                  "Condition": {
                                    "StringEquals": {
                                      "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                  },
                                  "Resource": "\${Token[TOKEN.56]}/*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Policy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.79]}",
                      "resource": CfnBucketPolicy {
                        "_cfnProperties": {
                          "bucket": "\${Token[TOKEN.55]}",
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "s3:GetObject",
                                "Condition": {
                                  "StringEquals": {
                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                  },
                                },
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                },
                                "Resource": "\${Token[TOKEN.56]}/*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                        },
                        "bucket": "\${Token[TOKEN.55]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::S3::BucketPolicy",
                        "dependsOn": Set {},
                        "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                },
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                              },
                              "Resource": "\${Token[TOKEN.56]}/*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "rawOverrides": {},
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "replicationRoleArn": undefined,
                    "stack": [Circular],
                    "transitionDefaultMinimumObjectSize": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "CachePolicy": CachePolicy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "cachePolicyId": "\${Token[TOKEN.63]}",
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "node": Node {
                      "_children": {
                        "Resource": CfnCachePolicy {
                          "_cfnProperties": {
                            "cachePolicyConfig": {
                              "comment": "Cache HostedBucket Bucket",
                              "defaultTtl": 2592000,
                              "maxTtl": 2592000,
                              "minTtl": 2592000,
                              "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                              "parametersInCacheKeyAndForwardedToOrigin": {
                                "cookiesConfig": {
                                  "cookieBehavior": "none",
                                  "cookies": undefined,
                                },
                                "enableAcceptEncodingBrotli": false,
                                "enableAcceptEncodingGzip": false,
                                "headersConfig": {
                                  "headerBehavior": "none",
                                  "headers": undefined,
                                },
                                "queryStringsConfig": {
                                  "queryStringBehavior": "none",
                                  "queryStrings": undefined,
                                },
                              },
                            },
                          },
                          "attrId": "\${Token[TOKEN.61]}",
                          "attrLastModifiedTime": "\${Token[TOKEN.62]}",
                          "cachePolicyConfig": {
                            "comment": "Cache HostedBucket Bucket",
                            "defaultTtl": 2592000,
                            "maxTtl": 2592000,
                            "minTtl": 2592000,
                            "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                            "parametersInCacheKeyAndForwardedToOrigin": {
                              "cookiesConfig": {
                                "cookieBehavior": "none",
                                "cookies": undefined,
                              },
                              "enableAcceptEncodingBrotli": false,
                              "enableAcceptEncodingGzip": false,
                              "headersConfig": {
                                "headerBehavior": "none",
                                "headers": undefined,
                              },
                              "queryStringsConfig": {
                                "queryStringBehavior": "none",
                                "queryStrings": undefined,
                              },
                            },
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::CloudFront::CachePolicy",
                          "dependsOn": Set {},
                          "logicalId": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "rawOverrides": {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "CachePolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.59]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Certificate": DnsValidatedCertificate {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "certificateArn": "\${Token[Default.Arn.44]}",
                    "domainName": "app.s0na.de",
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "hostedZoneId": "DUMMY",
                    "node": Node {
                      "_children": {
                        "CertificateRequestorFunction": CertificateRequestCertificateRequestFunction {
                          "_allowCrossEnvironment": false,
                          "_architecture": undefined,
                          "_functionUrlInvocationGrants": {},
                          "_invocationGrants": {},
                          "_layers": [],
                          "_logGroup": undefined,
                          "_physicalName": undefined,
                          "_policyCounter": 0,
                          "_warnIfCurrentVersionCalled": false,
                          "architecture": Architecture {
                            "dockerPlatform": "linux/amd64",
                            "name": "x86_64",
                          },
                          "canCreatePermissions": true,
                          "currentVersionOptions": undefined,
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "environment": {},
                          "functionArn": "\${Token[TOKEN.33]}",
                          "functionName": "\${Token[TOKEN.32]}",
                          "grantPrincipal": Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.20]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.34]}",
                              "_policyName": "\${Token[TOKEN.34]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": [
                                      "acm:RequestCertificate",
                                      "acm:DescribeCertificate",
                                      "acm:DeleteCertificate",
                                      "acm:AddTagsToCertificate",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": "route53:GetChange",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": "route53:changeResourceRecordSets",
                                    "Condition": {
                                      "ForAllValues:StringEquals": {
                                        "route53:ChangeResourceRecordSetsActions": [
                                          "UPSERT",
                                        ],
                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                          "CNAME",
                                        ],
                                      },
                                      "ForAllValues:StringLike": {
                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                          "*.app.s0na.de",
                                        ],
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "0000000000",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                    },
                                    "attrId": "\${Token[TOKEN.39]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.37]}",
                                    ],
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.34]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.35]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.36]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.34]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": [
                                  "acm:RequestCertificate",
                                  "acm:DescribeCertificate",
                                  "acm:DeleteCertificate",
                                  "acm:AddTagsToCertificate",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "route53:GetChange",
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "route53:changeResourceRecordSets",
                                "Condition": {
                                  "ForAllValues:StringEquals": {
                                    "route53:ChangeResourceRecordSetsActions": [
                                      "UPSERT",
                                    ],
                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                      "CNAME",
                                    ],
                                  },
                                  "ForAllValues:StringLike": {
                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                      "*.app.s0na.de",
                                    ],
                                  },
                                },
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.16]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "0000000000",
                                  "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.14]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.19]}",
                                  "attrRoleId": "\${Token[TOKEN.20]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.17]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.14]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.14]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.21]}",
                                ],
                              },
                            },
                            "principalAccount": "0000000000",
                            "roleArn": "\${Token[TOKEN.21]}",
                            "roleName": "\${Token[TOKEN.23]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "hashMixins": [],
                          "node": Node {
                            "_children": {
                              "Code": Asset {
                                "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                "bucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                  "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                  "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                  "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.25]}",
                                  "policy": undefined,
                                  "replicationRoleArn": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "httpUrl": "\${Token[TOKEN.24]}",
                                "isBundled": false,
                                "isFile": false,
                                "isZipArchive": true,
                                "node": Node {
                                  "_children": {
                                    "AssetBucket": Import {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "autoCreatePolicy": false,
                                      "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                      "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                      "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                      "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                      "bucketWebsiteNewUrlFormat": false,
                                      "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                      "disallowPublicAccess": false,
                                      "encryptionKey": undefined,
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "isWebsite": false,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "AssetBucket",
                                        "scope": [Circular],
                                      },
                                      "notificationsHandlerRole": undefined,
                                      "physicalName": "\${Token[TOKEN.25]}",
                                      "policy": undefined,
                                      "replicationRoleArn": undefined,
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Stage": AssetStaging {
                                      "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                      "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                      "customSourceFingerprint": undefined,
                                      "fingerprintOptions": {
                                        "assetHash": undefined,
                                        "deployTime": true,
                                        "exclude": [
                                          ".is_custom_resource",
                                        ],
                                        "extraHash": undefined,
                                        "follow": undefined,
                                        "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      },
                                      "hashType": "source",
                                      "isArchive": true,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Stage",
                                        "scope": [Circular],
                                      },
                                      "packaging": "zip",
                                      "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      "sourceStats": Stats {
                                        "atimeMs": 1746343388554.7612,
                                        "birthtimeMs": 1746343376650.715,
                                        "blksize": 4096,
                                        "blocks": 0,
                                        "ctimeMs": 1746343376650.7883,
                                        "dev": 16777232,
                                        "gid": 20,
                                        "ino": 76011303,
                                        "mode": 16877,
                                        "mtimeMs": 1746343376650.7883,
                                        "nlink": 3,
                                        "rdev": 0,
                                        "size": 96,
                                        "uid": 501,
                                      },
                                      "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Code",
                                  "scope": [Circular],
                                },
                                "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3Url": "\${Token[TOKEN.24]}",
                                "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnFunction {
                                "_cfnProperties": {
                                  "architectures": undefined,
                                  "code": {
                                    "imageUri": undefined,
                                    "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                    "s3ObjectVersion": undefined,
                                    "sourceKmsKeyArn": undefined,
                                    "zipFile": undefined,
                                  },
                                  "codeSigningConfigArn": undefined,
                                  "deadLetterConfig": undefined,
                                  "description": undefined,
                                  "environment": "<unresolved-lazy>",
                                  "ephemeralStorage": undefined,
                                  "fileSystemConfigs": undefined,
                                  "functionName": "\${Token[TOKEN.13]}",
                                  "handler": "index.certificateRequestHandler",
                                  "imageConfig": undefined,
                                  "kmsKeyArn": undefined,
                                  "layers": [
                                    "#{Token[TOKEN.26]}",
                                  ],
                                  "loggingConfig": undefined,
                                  "memorySize": undefined,
                                  "packageType": undefined,
                                  "recursiveLoop": undefined,
                                  "reservedConcurrentExecutions": undefined,
                                  "role": "\${Token[TOKEN.21]}",
                                  "runtime": "nodejs20.x",
                                  "runtimeManagementConfig": undefined,
                                  "snapStart": undefined,
                                  "timeout": 900,
                                  "vpcConfig": undefined,
                                },
                                "architectures": undefined,
                                "attrArn": "\${Token[TOKEN.28]}",
                                "attrSnapStartResponse": "<unresolved-token>",
                                "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                                "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::Lambda::Function",
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectVersion": undefined,
                                  "sourceKmsKeyArn": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "dependsOn": Set {},
                                "description": undefined,
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.13]}",
                                "handler": "index.certificateRequestHandler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.26]}",
                                ],
                                "loggingConfig": undefined,
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                "memorySize": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {
                                    Role {
                                      "_allowCrossEnvironment": false,
                                      "_didSplit": false,
                                      "_physicalName": undefined,
                                      "_roleId": "\${Token[TOKEN.20]}",
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "assumeRolePolicy": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [
                                          Policy {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": "\${Token[TOKEN.34]}",
                                            "_policyName": "\${Token[TOKEN.34]}",
                                            "document": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "force": false,
                                            "grantPrincipal": PolicyGrantPrincipal {
                                              "_policy": [Circular],
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "grantPrincipal": [Circular],
                                              "principalAccount": "0000000000",
                                            },
                                            "groups": [],
                                            "node": Node {
                                              "_children": {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": {
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                  },
                                                  "attrId": "\${Token[TOKEN.39]}",
                                                  "cfnOptions": {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "node": Node {
                                                    "_children": {},
                                                    "_context": {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": [
                                                      {
                                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                        "trace": undefined,
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "scope": [Circular],
                                                  },
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "rawOverrides": {},
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): {
                                                    "dependencyRoots": [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [
                                                {
                                                  "validate": [Function],
                                                },
                                              ],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.34]}",
                                            "referenceTaken": false,
                                            "roles": [
                                              [Circular],
                                            ],
                                            "stack": [Circular],
                                            "users": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                      "defaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "dependables": Map {
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "grantPrincipal": [Circular],
                                      "inlinePolicies": {},
                                      "managedPolicies": [
                                        AwsManagedPolicy {
                                          "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                        },
                                      ],
                                      "node": Node {
                                        "_children": {
                                          "DefaultPolicy": Policy {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": "\${Token[TOKEN.34]}",
                                            "_policyName": "\${Token[TOKEN.34]}",
                                            "document": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "force": false,
                                            "grantPrincipal": PolicyGrantPrincipal {
                                              "_policy": [Circular],
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "grantPrincipal": [Circular],
                                              "principalAccount": "0000000000",
                                            },
                                            "groups": [],
                                            "node": Node {
                                              "_children": {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": {
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                  },
                                                  "attrId": "\${Token[TOKEN.39]}",
                                                  "cfnOptions": {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "node": Node {
                                                    "_children": {},
                                                    "_context": {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": [
                                                      {
                                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                        "trace": undefined,
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "scope": [Circular],
                                                  },
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "rawOverrides": {},
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): {
                                                    "dependencyRoots": [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [
                                                {
                                                  "validate": [Function],
                                                },
                                              ],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.34]}",
                                            "referenceTaken": false,
                                            "roles": [
                                              [Circular],
                                            ],
                                            "stack": [Circular],
                                            "users": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                          "ImportServiceRole": ImportedRole {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": undefined,
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "attachedPolicies": AttachedPolicies {
                                              "policies": [],
                                            },
                                            "defaultPolicyName": undefined,
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "grantPrincipal": [Circular],
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "ImportServiceRole",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.16]}",
                                            "policyFragment": PrincipalPolicyFragment {
                                              "conditions": {},
                                              "principalJson": {
                                                "AWS": [
                                                  "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                                ],
                                              },
                                            },
                                            "principalAccount": "0000000000",
                                            "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                            "roleName": "ServiceRole",
                                            "stack": [Circular],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                          "Resource": CfnRole {
                                            "_cfnProperties": {
                                              "assumeRolePolicyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                    },
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "description": undefined,
                                              "managedPolicyArns": [
                                                "#{Token[TOKEN.17]}",
                                              ],
                                              "maxSessionDuration": undefined,
                                              "path": undefined,
                                              "permissionsBoundary": undefined,
                                              "policies": undefined,
                                              "roleName": "\${Token[TOKEN.14]}",
                                            },
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "attrArn": "\${Token[TOKEN.19]}",
                                            "attrRoleId": "\${Token[TOKEN.20]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Role",
                                            "dependsOn": Set {},
                                            "description": undefined,
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.17]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "rawOverrides": {},
                                            "roleName": "\${Token[TOKEN.14]}",
                                            "stack": [Circular],
                                            "tags": TagManager {
                                              "didHaveInitialTags": false,
                                              "externalTagPriority": 50,
                                              "priorities": Map {},
                                              "renderedTags": "<unresolved-lazy>",
                                              "resourceTypeName": "AWS::IAM::Role",
                                              "tagFormatter": StandardFormatter {},
                                              "tagPropertyName": "tags",
                                              "tags": Map {},
                                            },
                                            "tagsRaw": undefined,
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "ServiceRole",
                                        "scope": [Circular],
                                      },
                                      "permissionsBoundary": undefined,
                                      "physicalName": "\${Token[TOKEN.14]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "\${Token[TOKEN.21]}",
                                          ],
                                        },
                                      },
                                      "principalAccount": "0000000000",
                                      "roleArn": "\${Token[TOKEN.21]}",
                                      "roleName": "\${Token[TOKEN.23]}",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "packageType": undefined,
                                "rawOverrides": {},
                                "recursiveLoop": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.21]}",
                                "runtime": "nodejs20.x",
                                "runtimeManagementConfig": undefined,
                                "snapStart": undefined,
                                "stack": [Circular],
                                "tags": TagManager {
                                  "didHaveInitialTags": false,
                                  "externalTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::Lambda::Function",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                "tagsRaw": undefined,
                                "timeout": 900,
                                "tracingConfig": undefined,
                                "vpcConfig": undefined,
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ServiceRole": Role {
                                "_allowCrossEnvironment": false,
                                "_didSplit": false,
                                "_physicalName": undefined,
                                "_roleId": "\${Token[TOKEN.20]}",
                                "assumeRoleAction": "sts:AssumeRole",
                                "assumeRolePolicy": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [
                                    Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "defaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "dependables": Map {
                                  {
                                    "Action": [
                                      "acm:RequestCertificate",
                                      "acm:DescribeCertificate",
                                      "acm:DeleteCertificate",
                                      "acm:AddTagsToCertificate",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                  {
                                    "Action": "route53:GetChange",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                  {
                                    "Action": "route53:changeResourceRecordSets",
                                    "Condition": {
                                      "ForAllValues:StringEquals": {
                                        "route53:ChangeResourceRecordSetsActions": [
                                          "UPSERT",
                                        ],
                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                          "CNAME",
                                        ],
                                      },
                                      "ForAllValues:StringLike": {
                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                          "*.app.s0na.de",
                                        ],
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "grantPrincipal": [Circular],
                                "inlinePolicies": {},
                                "managedPolicies": [
                                  AwsManagedPolicy {
                                    "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                  },
                                ],
                                "node": Node {
                                  "_children": {
                                    "DefaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "ImportServiceRole": ImportedRole {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [],
                                      },
                                      "defaultPolicyName": undefined,
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "grantPrincipal": [Circular],
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "ImportServiceRole",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.16]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                          ],
                                        },
                                      },
                                      "principalAccount": "0000000000",
                                      "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                      "roleName": "ServiceRole",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Resource": CfnRole {
                                      "_cfnProperties": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "description": undefined,
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.17]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "roleName": "\${Token[TOKEN.14]}",
                                      },
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attrArn": "\${Token[TOKEN.19]}",
                                      "attrRoleId": "\${Token[TOKEN.20]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Role",
                                      "dependsOn": Set {},
                                      "description": undefined,
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "rawOverrides": {},
                                      "roleName": "\${Token[TOKEN.14]}",
                                      "stack": [Circular],
                                      "tags": TagManager {
                                        "didHaveInitialTags": false,
                                        "externalTagPriority": 50,
                                        "priorities": Map {},
                                        "renderedTags": "<unresolved-lazy>",
                                        "resourceTypeName": "AWS::IAM::Role",
                                        "tagFormatter": StandardFormatter {},
                                        "tagPropertyName": "tags",
                                        "tags": Map {},
                                      },
                                      "tagsRaw": undefined,
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "ServiceRole",
                                  "scope": [Circular],
                                },
                                "permissionsBoundary": undefined,
                                "physicalName": "\${Token[TOKEN.14]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "\${Token[TOKEN.21]}",
                                    ],
                                  },
                                },
                                "principalAccount": "0000000000",
                                "roleArn": "\${Token[TOKEN.21]}",
                                "roleName": "\${Token[TOKEN.23]}",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": 0,
                                "trace": undefined,
                                "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "CertificateRequestorFunction",
                            "scope": [Circular],
                          },
                          "permissionsNode": Node {
                            "_children": {
                              "Code": Asset {
                                "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                "bucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                  "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                  "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                  "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.25]}",
                                  "policy": undefined,
                                  "replicationRoleArn": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "httpUrl": "\${Token[TOKEN.24]}",
                                "isBundled": false,
                                "isFile": false,
                                "isZipArchive": true,
                                "node": Node {
                                  "_children": {
                                    "AssetBucket": Import {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "autoCreatePolicy": false,
                                      "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                      "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                      "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                      "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                      "bucketWebsiteNewUrlFormat": false,
                                      "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                      "disallowPublicAccess": false,
                                      "encryptionKey": undefined,
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "isWebsite": false,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "AssetBucket",
                                        "scope": [Circular],
                                      },
                                      "notificationsHandlerRole": undefined,
                                      "physicalName": "\${Token[TOKEN.25]}",
                                      "policy": undefined,
                                      "replicationRoleArn": undefined,
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Stage": AssetStaging {
                                      "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                      "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                      "customSourceFingerprint": undefined,
                                      "fingerprintOptions": {
                                        "assetHash": undefined,
                                        "deployTime": true,
                                        "exclude": [
                                          ".is_custom_resource",
                                        ],
                                        "extraHash": undefined,
                                        "follow": undefined,
                                        "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      },
                                      "hashType": "source",
                                      "isArchive": true,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Stage",
                                        "scope": [Circular],
                                      },
                                      "packaging": "zip",
                                      "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                      "sourceStats": Stats {
                                        "atimeMs": 1746343388554.7612,
                                        "birthtimeMs": 1746343376650.715,
                                        "blksize": 4096,
                                        "blocks": 0,
                                        "ctimeMs": 1746343376650.7883,
                                        "dev": 16777232,
                                        "gid": 20,
                                        "ino": 76011303,
                                        "mode": 16877,
                                        "mtimeMs": 1746343376650.7883,
                                        "nlink": 3,
                                        "rdev": 0,
                                        "size": 96,
                                        "uid": 501,
                                      },
                                      "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Code",
                                  "scope": [Circular],
                                },
                                "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                "s3Url": "\${Token[TOKEN.24]}",
                                "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnFunction {
                                "_cfnProperties": {
                                  "architectures": undefined,
                                  "code": {
                                    "imageUri": undefined,
                                    "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                    "s3ObjectVersion": undefined,
                                    "sourceKmsKeyArn": undefined,
                                    "zipFile": undefined,
                                  },
                                  "codeSigningConfigArn": undefined,
                                  "deadLetterConfig": undefined,
                                  "description": undefined,
                                  "environment": "<unresolved-lazy>",
                                  "ephemeralStorage": undefined,
                                  "fileSystemConfigs": undefined,
                                  "functionName": "\${Token[TOKEN.13]}",
                                  "handler": "index.certificateRequestHandler",
                                  "imageConfig": undefined,
                                  "kmsKeyArn": undefined,
                                  "layers": [
                                    "#{Token[TOKEN.26]}",
                                  ],
                                  "loggingConfig": undefined,
                                  "memorySize": undefined,
                                  "packageType": undefined,
                                  "recursiveLoop": undefined,
                                  "reservedConcurrentExecutions": undefined,
                                  "role": "\${Token[TOKEN.21]}",
                                  "runtime": "nodejs20.x",
                                  "runtimeManagementConfig": undefined,
                                  "snapStart": undefined,
                                  "timeout": 900,
                                  "vpcConfig": undefined,
                                },
                                "architectures": undefined,
                                "attrArn": "\${Token[TOKEN.28]}",
                                "attrSnapStartResponse": "<unresolved-token>",
                                "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                                "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::Lambda::Function",
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectVersion": undefined,
                                  "sourceKmsKeyArn": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "dependsOn": Set {},
                                "description": undefined,
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.13]}",
                                "handler": "index.certificateRequestHandler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.26]}",
                                ],
                                "loggingConfig": undefined,
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                "memorySize": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {
                                    Role {
                                      "_allowCrossEnvironment": false,
                                      "_didSplit": false,
                                      "_physicalName": undefined,
                                      "_roleId": "\${Token[TOKEN.20]}",
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "assumeRolePolicy": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [
                                          Policy {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": "\${Token[TOKEN.34]}",
                                            "_policyName": "\${Token[TOKEN.34]}",
                                            "document": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "force": false,
                                            "grantPrincipal": PolicyGrantPrincipal {
                                              "_policy": [Circular],
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "grantPrincipal": [Circular],
                                              "principalAccount": "0000000000",
                                            },
                                            "groups": [],
                                            "node": Node {
                                              "_children": {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": {
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                  },
                                                  "attrId": "\${Token[TOKEN.39]}",
                                                  "cfnOptions": {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "node": Node {
                                                    "_children": {},
                                                    "_context": {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": [
                                                      {
                                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                        "trace": undefined,
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "scope": [Circular],
                                                  },
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "rawOverrides": {},
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): {
                                                    "dependencyRoots": [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [
                                                {
                                                  "validate": [Function],
                                                },
                                              ],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.34]}",
                                            "referenceTaken": false,
                                            "roles": [
                                              [Circular],
                                            ],
                                            "stack": [Circular],
                                            "users": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                      "defaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "dependables": Map {
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        } => DependencyGroup {
                                          "_deps": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [],
                                          },
                                        },
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "grantPrincipal": [Circular],
                                      "inlinePolicies": {},
                                      "managedPolicies": [
                                        AwsManagedPolicy {
                                          "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                        },
                                      ],
                                      "node": Node {
                                        "_children": {
                                          "DefaultPolicy": Policy {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": "\${Token[TOKEN.34]}",
                                            "_policyName": "\${Token[TOKEN.34]}",
                                            "document": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "force": false,
                                            "grantPrincipal": PolicyGrantPrincipal {
                                              "_policy": [Circular],
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "grantPrincipal": [Circular],
                                              "principalAccount": "0000000000",
                                            },
                                            "groups": [],
                                            "node": Node {
                                              "_children": {
                                                "Resource": CfnPolicyConditional {
                                                  "_cfnProperties": {
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                  },
                                                  "attrId": "\${Token[TOKEN.39]}",
                                                  "cfnOptions": {},
                                                  "cfnResourceType": "AWS::IAM::Policy",
                                                  "dependsOn": Set {},
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "node": Node {
                                                    "_children": {},
                                                    "_context": {},
                                                    "_dependencies": Set {},
                                                    "_locked": false,
                                                    "_metadata": [
                                                      {
                                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                        "trace": undefined,
                                                        "type": "aws:cdk:logicalId",
                                                      },
                                                    ],
                                                    "_validations": [],
                                                    "host": [Circular],
                                                    "id": "Resource",
                                                    "scope": [Circular],
                                                  },
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "rawOverrides": {},
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "stack": [Circular],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                  Symbol(@aws-cdk/core.DependableTrait): {
                                                    "dependencyRoots": [
                                                      [Circular],
                                                    ],
                                                  },
                                                },
                                              },
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [
                                                {
                                                  "validate": [Function],
                                                },
                                              ],
                                              "host": [Circular],
                                              "id": "DefaultPolicy",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.34]}",
                                            "referenceTaken": false,
                                            "roles": [
                                              [Circular],
                                            ],
                                            "stack": [Circular],
                                            "users": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                          "ImportServiceRole": ImportedRole {
                                            "_allowCrossEnvironment": false,
                                            "_physicalName": undefined,
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "attachedPolicies": AttachedPolicies {
                                              "policies": [],
                                            },
                                            "defaultPolicyName": undefined,
                                            "env": {
                                              "account": "0000000000",
                                              "region": "eu-central-1",
                                            },
                                            "grantPrincipal": [Circular],
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "ImportServiceRole",
                                              "scope": [Circular],
                                            },
                                            "physicalName": "\${Token[TOKEN.16]}",
                                            "policyFragment": PrincipalPolicyFragment {
                                              "conditions": {},
                                              "principalJson": {
                                                "AWS": [
                                                  "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                                ],
                                              },
                                            },
                                            "principalAccount": "0000000000",
                                            "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                            "roleName": "ServiceRole",
                                            "stack": [Circular],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                          "Resource": CfnRole {
                                            "_cfnProperties": {
                                              "assumeRolePolicyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                    },
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "description": undefined,
                                              "managedPolicyArns": [
                                                "#{Token[TOKEN.17]}",
                                              ],
                                              "maxSessionDuration": undefined,
                                              "path": undefined,
                                              "permissionsBoundary": undefined,
                                              "policies": undefined,
                                              "roleName": "\${Token[TOKEN.14]}",
                                            },
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "attrArn": "\${Token[TOKEN.19]}",
                                            "attrRoleId": "\${Token[TOKEN.20]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Role",
                                            "dependsOn": Set {},
                                            "description": undefined,
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.17]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "rawOverrides": {},
                                            "roleName": "\${Token[TOKEN.14]}",
                                            "stack": [Circular],
                                            "tags": TagManager {
                                              "didHaveInitialTags": false,
                                              "externalTagPriority": 50,
                                              "priorities": Map {},
                                              "renderedTags": "<unresolved-lazy>",
                                              "resourceTypeName": "AWS::IAM::Role",
                                              "tagFormatter": StandardFormatter {},
                                              "tagPropertyName": "tags",
                                              "tags": Map {},
                                            },
                                            "tagsRaw": undefined,
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "ServiceRole",
                                        "scope": [Circular],
                                      },
                                      "permissionsBoundary": undefined,
                                      "physicalName": "\${Token[TOKEN.14]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "\${Token[TOKEN.21]}",
                                          ],
                                        },
                                      },
                                      "principalAccount": "0000000000",
                                      "roleArn": "\${Token[TOKEN.21]}",
                                      "roleName": "\${Token[TOKEN.23]}",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "packageType": undefined,
                                "rawOverrides": {},
                                "recursiveLoop": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.21]}",
                                "runtime": "nodejs20.x",
                                "runtimeManagementConfig": undefined,
                                "snapStart": undefined,
                                "stack": [Circular],
                                "tags": TagManager {
                                  "didHaveInitialTags": false,
                                  "externalTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::Lambda::Function",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                "tagsRaw": undefined,
                                "timeout": 900,
                                "tracingConfig": undefined,
                                "vpcConfig": undefined,
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ServiceRole": Role {
                                "_allowCrossEnvironment": false,
                                "_didSplit": false,
                                "_physicalName": undefined,
                                "_roleId": "\${Token[TOKEN.20]}",
                                "assumeRoleAction": "sts:AssumeRole",
                                "assumeRolePolicy": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [
                                    Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "defaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "dependables": Map {
                                  {
                                    "Action": [
                                      "acm:RequestCertificate",
                                      "acm:DescribeCertificate",
                                      "acm:DeleteCertificate",
                                      "acm:AddTagsToCertificate",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                  {
                                    "Action": "route53:GetChange",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                  {
                                    "Action": "route53:changeResourceRecordSets",
                                    "Condition": {
                                      "ForAllValues:StringEquals": {
                                        "route53:ChangeResourceRecordSetsActions": [
                                          "UPSERT",
                                        ],
                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                          "CNAME",
                                        ],
                                      },
                                      "ForAllValues:StringLike": {
                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                          "*.app.s0na.de",
                                        ],
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "grantPrincipal": [Circular],
                                "inlinePolicies": {},
                                "managedPolicies": [
                                  AwsManagedPolicy {
                                    "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                  },
                                ],
                                "node": Node {
                                  "_children": {
                                    "DefaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.34]}",
                                      "_policyName": "\${Token[TOKEN.34]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "0000000000",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                            },
                                            "attrId": "\${Token[TOKEN.39]}",
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.34]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "ImportServiceRole": ImportedRole {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [],
                                      },
                                      "defaultPolicyName": undefined,
                                      "env": {
                                        "account": "0000000000",
                                        "region": "eu-central-1",
                                      },
                                      "grantPrincipal": [Circular],
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "ImportServiceRole",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.16]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                          ],
                                        },
                                      },
                                      "principalAccount": "0000000000",
                                      "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                      "roleName": "ServiceRole",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Resource": CfnRole {
                                      "_cfnProperties": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "description": undefined,
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.17]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "roleName": "\${Token[TOKEN.14]}",
                                      },
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attrArn": "\${Token[TOKEN.19]}",
                                      "attrRoleId": "\${Token[TOKEN.20]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Role",
                                      "dependsOn": Set {},
                                      "description": undefined,
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "rawOverrides": {},
                                      "roleName": "\${Token[TOKEN.14]}",
                                      "stack": [Circular],
                                      "tags": TagManager {
                                        "didHaveInitialTags": false,
                                        "externalTagPriority": 50,
                                        "priorities": Map {},
                                        "renderedTags": "<unresolved-lazy>",
                                        "resourceTypeName": "AWS::IAM::Role",
                                        "tagFormatter": StandardFormatter {},
                                        "tagPropertyName": "tags",
                                        "tags": Map {},
                                      },
                                      "tagsRaw": undefined,
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "ServiceRole",
                                  "scope": [Circular],
                                },
                                "permissionsBoundary": undefined,
                                "physicalName": "\${Token[TOKEN.14]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "\${Token[TOKEN.21]}",
                                    ],
                                  },
                                },
                                "principalAccount": "0000000000",
                                "roleArn": "\${Token[TOKEN.21]}",
                                "roleName": "\${Token[TOKEN.23]}",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": 0,
                                "trace": undefined,
                                "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "CertificateRequestorFunction",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.13]}",
                          "role": Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.20]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.15]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.34]}",
                              "_policyName": "\${Token[TOKEN.34]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": [
                                      "acm:RequestCertificate",
                                      "acm:DescribeCertificate",
                                      "acm:DeleteCertificate",
                                      "acm:AddTagsToCertificate",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": "route53:GetChange",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": "route53:changeResourceRecordSets",
                                    "Condition": {
                                      "ForAllValues:StringEquals": {
                                        "route53:ChangeResourceRecordSetsActions": [
                                          "UPSERT",
                                        ],
                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                          "CNAME",
                                        ],
                                      },
                                      "ForAllValues:StringLike": {
                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                          "*.app.s0na.de",
                                        ],
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "0000000000",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                    },
                                    "attrId": "\${Token[TOKEN.39]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.37]}",
                                    ],
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.34]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.35]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.36]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.34]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": [
                                  "acm:RequestCertificate",
                                  "acm:DescribeCertificate",
                                  "acm:DeleteCertificate",
                                  "acm:AddTagsToCertificate",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "route53:GetChange",
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "route53:changeResourceRecordSets",
                                "Condition": {
                                  "ForAllValues:StringEquals": {
                                    "route53:ChangeResourceRecordSetsActions": [
                                      "UPSERT",
                                    ],
                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                      "CNAME",
                                    ],
                                  },
                                  "ForAllValues:StringLike": {
                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                      "*.app.s0na.de",
                                    ],
                                  },
                                },
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.34]}",
                                  "_policyName": "\${Token[TOKEN.34]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "acm:RequestCertificate",
                                          "acm:DescribeCertificate",
                                          "acm:DeleteCertificate",
                                          "acm:AddTagsToCertificate",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:GetChange",
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": "route53:changeResourceRecordSets",
                                        "Condition": {
                                          "ForAllValues:StringEquals": {
                                            "route53:ChangeResourceRecordSetsActions": [
                                              "UPSERT",
                                            ],
                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                              "CNAME",
                                            ],
                                          },
                                          "ForAllValues:StringLike": {
                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                              "*.app.s0na.de",
                                            ],
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "0000000000",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                        },
                                        "attrId": "\${Token[TOKEN.39]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.34]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.16]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "0000000000",
                                  "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.14]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.19]}",
                                  "attrRoleId": "\${Token[TOKEN.20]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.17]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.14]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.14]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.21]}",
                                ],
                              },
                            },
                            "principalAccount": "0000000000",
                            "roleArn": "\${Token[TOKEN.21]}",
                            "roleName": "\${Token[TOKEN.23]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "runtime": Runtime {
                            "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "family": 0,
                            "isVariable": true,
                            "name": "nodejs20.x",
                            "supportsCodeGuruProfiling": false,
                            "supportsInlineCode": true,
                            "supportsSnapStart": false,
                          },
                          "stack": [Circular],
                          "timeout": Duration {
                            "amount": 15,
                            "unit": TimeUnit {
                              "inMillis": 60000,
                              "isoLabel": "M",
                              "label": "minutes",
                            },
                          },
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "CertificateRequestorResource": CustomResource {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "node": Node {
                            "_children": {
                              "Default": CfnResource {
                                "_cfnProperties": {
                                  "CertificateTransparencyLoggingPreference": undefined,
                                  "CleanupRecords": undefined,
                                  "DomainName": "app.s0na.de",
                                  "HostedZoneId": "DUMMY",
                                  "Region": "us-east-1",
                                  "RemovalPolicy": "<unresolved-lazy>",
                                  "Route53Endpoint": undefined,
                                  "ServiceTimeout": undefined,
                                  "ServiceToken": "\${Token[TOKEN.33]}",
                                  "SubjectAlternativeNames": [
                                    "#{Token[TOKEN.40]}",
                                  ],
                                  "Tags": [
                                    "#{Token[TOKEN.41]}",
                                  ],
                                },
                                "cfnOptions": {
                                  "deletionPolicy": "Delete",
                                  "updateReplacePolicy": "Delete",
                                },
                                "cfnResourceType": "AWS::CloudFormation::CustomResource",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Default",
                                  "scope": [Circular],
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "CertificateRequestorResource",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.42]}",
                          "resource": CfnResource {
                            "_cfnProperties": {
                              "CertificateTransparencyLoggingPreference": undefined,
                              "CleanupRecords": undefined,
                              "DomainName": "app.s0na.de",
                              "HostedZoneId": "DUMMY",
                              "Region": "us-east-1",
                              "RemovalPolicy": "<unresolved-lazy>",
                              "Route53Endpoint": undefined,
                              "ServiceTimeout": undefined,
                              "ServiceToken": "\${Token[TOKEN.33]}",
                              "SubjectAlternativeNames": [
                                "#{Token[TOKEN.40]}",
                              ],
                              "Tags": [
                                "#{Token[TOKEN.41]}",
                              ],
                            },
                            "cfnOptions": {
                              "deletionPolicy": "Delete",
                              "updateReplacePolicy": "Delete",
                            },
                            "cfnResourceType": "AWS::CloudFormation::CustomResource",
                            "dependsOn": Set {},
                            "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Default",
                              "scope": [Circular],
                            },
                            "rawOverrides": {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "Certificate",
                      "scope": [Circular],
                    },
                    "normalizedZoneName": "s0na.de",
                    "physicalName": "\${Token[TOKEN.12]}",
                    "region": "us-east-1",
                    "stack": [Circular],
                    "tags": TagManager {
                      "didHaveInitialTags": false,
                      "externalTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::CertificateManager::Certificate",
                      "tagFormatter": MapFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "DeploymentAccessKey": AccessKey {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "accessKeyId": "\${Token[TOKEN.103]}",
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "node": Node {
                      "_children": {
                        "Resource": CfnAccessKey {
                          "_cfnProperties": {
                            "serial": undefined,
                            "status": undefined,
                            "userName": "\${Token[TOKEN.97]}",
                          },
                          "attrId": "\${Token[TOKEN.101]}",
                          "attrSecretAccessKey": "\${Token[TOKEN.102]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::AccessKey",
                          "dependsOn": Set {},
                          "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentAccessKey.Resource.LogicalID.100]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.DeploymentAccessKey.Resource.LogicalID.100]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "rawOverrides": {},
                          "serial": undefined,
                          "stack": [Circular],
                          "status": undefined,
                          "userName": "\${Token[TOKEN.97]}",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "DeploymentAccessKey",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.99]}",
                    "secretAccessKey": "<unresolved-token>",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "DeploymentUser": User {
                    "_allowCrossEnvironment": true,
                    "_physicalName": "NextJsAppDeployment",
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": [
                        Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.104]}",
                          "_policyName": "\${Token[TOKEN.104]}",
                          "document": {
                            "Statement": [
                              {
                                "Action": [
                                  "s3:GetObject*",
                                  "s3:GetBucket*",
                                  "s3:List*",
                                  "s3:DeleteObject*",
                                  "s3:PutObject",
                                  "s3:PutObjectLegalHold",
                                  "s3:PutObjectRetention",
                                  "s3:PutObjectTagging",
                                  "s3:PutObjectVersionTagging",
                                  "s3:Abort*",
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.56]}",
                                  "\${Token[TOKEN.56]}/*",
                                ],
                              },
                              {
                                "Action": "cloudfront:CreateInvalidation",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "force": false,
                          "grantPrincipal": PolicyGrantPrincipal {
                            "_policy": [Circular],
                            "assumeRoleAction": "sts:AssumeRole",
                            "grantPrincipal": [Circular],
                            "principalAccount": "0000000000",
                          },
                          "groups": [],
                          "node": Node {
                            "_children": {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": {
                                  "groups": [
                                    "#{Token[TOKEN.107]}",
                                  ],
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "s3:GetObject*",
                                          "s3:GetBucket*",
                                          "s3:List*",
                                          "s3:DeleteObject*",
                                          "s3:PutObject",
                                          "s3:PutObjectLegalHold",
                                          "s3:PutObjectRetention",
                                          "s3:PutObjectTagging",
                                          "s3:PutObjectVersionTagging",
                                          "s3:Abort*",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.56]}",
                                          "\${Token[TOKEN.56]}/*",
                                        ],
                                      },
                                      {
                                        "Action": "cloudfront:CreateInvalidation",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.104]}",
                                  "roles": [
                                    "#{Token[TOKEN.105]}",
                                  ],
                                  "users": [
                                    "#{Token[TOKEN.106]}",
                                  ],
                                },
                                "attrId": "\${Token[TOKEN.109]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": [
                                  "#{Token[TOKEN.107]}",
                                ],
                                "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject",
                                        "s3:PutObjectLegalHold",
                                        "s3:PutObjectRetention",
                                        "s3:PutObjectTagging",
                                        "s3:PutObjectVersionTagging",
                                        "s3:Abort*",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.56]}",
                                        "\${Token[TOKEN.56]}/*",
                                      ],
                                    },
                                    {
                                      "Action": "cloudfront:CreateInvalidation",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.104]}",
                                "rawOverrides": {},
                                "roles": [
                                  "#{Token[TOKEN.105]}",
                                ],
                                "stack": [Circular],
                                "users": [
                                  "#{Token[TOKEN.106]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.104]}",
                          "referenceTaken": false,
                          "roles": [],
                          "stack": [Circular],
                          "users": [
                            [Circular],
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      ],
                    },
                    "defaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.104]}",
                      "_policyName": "\${Token[TOKEN.104]}",
                      "document": {
                        "Statement": [
                          {
                            "Action": [
                              "s3:GetObject*",
                              "s3:GetBucket*",
                              "s3:List*",
                              "s3:DeleteObject*",
                              "s3:PutObject",
                              "s3:PutObjectLegalHold",
                              "s3:PutObjectRetention",
                              "s3:PutObjectTagging",
                              "s3:PutObjectVersionTagging",
                              "s3:Abort*",
                            ],
                            "Effect": "Allow",
                            "Resource": [
                              "\${Token[TOKEN.56]}",
                              "\${Token[TOKEN.56]}/*",
                            ],
                          },
                          {
                            "Action": "cloudfront:CreateInvalidation",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "0000000000",
                        "region": "eu-central-1",
                      },
                      "force": false,
                      "grantPrincipal": PolicyGrantPrincipal {
                        "_policy": [Circular],
                        "assumeRoleAction": "sts:AssumeRole",
                        "grantPrincipal": [Circular],
                        "principalAccount": "0000000000",
                      },
                      "groups": [],
                      "node": Node {
                        "_children": {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": {
                              "groups": [
                                "#{Token[TOKEN.107]}",
                              ],
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": [
                                      "s3:GetObject*",
                                      "s3:GetBucket*",
                                      "s3:List*",
                                      "s3:DeleteObject*",
                                      "s3:PutObject",
                                      "s3:PutObjectLegalHold",
                                      "s3:PutObjectRetention",
                                      "s3:PutObjectTagging",
                                      "s3:PutObjectVersionTagging",
                                      "s3:Abort*",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.56]}",
                                      "\${Token[TOKEN.56]}/*",
                                    ],
                                  },
                                  {
                                    "Action": "cloudfront:CreateInvalidation",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.104]}",
                              "roles": [
                                "#{Token[TOKEN.105]}",
                              ],
                              "users": [
                                "#{Token[TOKEN.106]}",
                              ],
                            },
                            "attrId": "\${Token[TOKEN.109]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": [
                              "#{Token[TOKEN.107]}",
                            ],
                            "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.56]}",
                                    "\${Token[TOKEN.56]}/*",
                                  ],
                                },
                                {
                                  "Action": "cloudfront:CreateInvalidation",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.104]}",
                            "rawOverrides": {},
                            "roles": [
                              "#{Token[TOKEN.105]}",
                            ],
                            "stack": [Circular],
                            "users": [
                              "#{Token[TOKEN.106]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.104]}",
                      "referenceTaken": false,
                      "roles": [],
                      "stack": [Circular],
                      "users": [
                        [Circular],
                      ],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "grantPrincipal": [Circular],
                    "groups": [],
                    "managedPolicies": [],
                    "node": Node {
                      "_children": {
                        "DefaultPolicy": Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.104]}",
                          "_policyName": "\${Token[TOKEN.104]}",
                          "document": {
                            "Statement": [
                              {
                                "Action": [
                                  "s3:GetObject*",
                                  "s3:GetBucket*",
                                  "s3:List*",
                                  "s3:DeleteObject*",
                                  "s3:PutObject",
                                  "s3:PutObjectLegalHold",
                                  "s3:PutObjectRetention",
                                  "s3:PutObjectTagging",
                                  "s3:PutObjectVersionTagging",
                                  "s3:Abort*",
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.56]}",
                                  "\${Token[TOKEN.56]}/*",
                                ],
                              },
                              {
                                "Action": "cloudfront:CreateInvalidation",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "force": false,
                          "grantPrincipal": PolicyGrantPrincipal {
                            "_policy": [Circular],
                            "assumeRoleAction": "sts:AssumeRole",
                            "grantPrincipal": [Circular],
                            "principalAccount": "0000000000",
                          },
                          "groups": [],
                          "node": Node {
                            "_children": {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": {
                                  "groups": [
                                    "#{Token[TOKEN.107]}",
                                  ],
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": [
                                          "s3:GetObject*",
                                          "s3:GetBucket*",
                                          "s3:List*",
                                          "s3:DeleteObject*",
                                          "s3:PutObject",
                                          "s3:PutObjectLegalHold",
                                          "s3:PutObjectRetention",
                                          "s3:PutObjectTagging",
                                          "s3:PutObjectVersionTagging",
                                          "s3:Abort*",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.56]}",
                                          "\${Token[TOKEN.56]}/*",
                                        ],
                                      },
                                      {
                                        "Action": "cloudfront:CreateInvalidation",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.104]}",
                                  "roles": [
                                    "#{Token[TOKEN.105]}",
                                  ],
                                  "users": [
                                    "#{Token[TOKEN.106]}",
                                  ],
                                },
                                "attrId": "\${Token[TOKEN.109]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": [
                                  "#{Token[TOKEN.107]}",
                                ],
                                "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.DeploymentUser.DefaultPolicy.Resource.LogicalID.108]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject",
                                        "s3:PutObjectLegalHold",
                                        "s3:PutObjectRetention",
                                        "s3:PutObjectTagging",
                                        "s3:PutObjectVersionTagging",
                                        "s3:Abort*",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.56]}",
                                        "\${Token[TOKEN.56]}/*",
                                      ],
                                    },
                                    {
                                      "Action": "cloudfront:CreateInvalidation",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:cloudfront::0000000000:distribution/\${Token[TOKEN.85]}",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.104]}",
                                "rawOverrides": {},
                                "roles": [
                                  "#{Token[TOKEN.105]}",
                                ],
                                "stack": [Circular],
                                "users": [
                                  "#{Token[TOKEN.106]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.104]}",
                          "referenceTaken": false,
                          "roles": [],
                          "stack": [Circular],
                          "users": [
                            [Circular],
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnUser {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.92]}",
                            ],
                            "loginProfile": undefined,
                            "managedPolicyArns": [
                              "#{Token[TOKEN.93]}",
                            ],
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "userName": "NextJsAppDeployment",
                          },
                          "attrArn": "\${Token[TOKEN.95]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::User",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.92]}",
                          ],
                          "logicalId": "\${Token[NextJsApp.HostedBucket.DeploymentUser.Resource.LogicalID.94]}",
                          "loginProfile": undefined,
                          "managedPolicyArns": [
                            "#{Token[TOKEN.93]}",
                          ],
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.DeploymentUser.Resource.LogicalID.94]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "rawOverrides": {},
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::IAM::User",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          "userName": "NextJsAppDeployment",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "DeploymentUser",
                      "scope": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "NextJsAppDeployment",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "\${Token[TOKEN.98]}",
                        ],
                      },
                    },
                    "principalAccount": "0000000000",
                    "stack": [Circular],
                    "userArn": "\${Token[TOKEN.98]}",
                    "userName": "\${Token[TOKEN.97]}",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Distribution": Distribution {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "additionalBehaviors": [],
                    "boundOrigins": [
                      {
                        "distributionId": undefined,
                        "origin": S3BucketOriginWithOAC {
                          "bucket": Bucket {
                            "_allowCrossEnvironment": true,
                            "_physicalName": "static.assets",
                            "_resource": CfnBucket {
                              "_cfnProperties": {
                                "accelerateConfiguration": undefined,
                                "accessControl": "\${Token[TOKEN.45]}",
                                "bucketEncryption": {
                                  "serverSideEncryptionConfiguration": [
                                    {
                                      "bucketKeyEnabled": undefined,
                                      "serverSideEncryptionByDefault": {
                                        "sseAlgorithm": "AES256",
                                      },
                                    },
                                  ],
                                },
                                "bucketName": "static.assets",
                                "corsConfiguration": "<unresolved-lazy>",
                                "intelligentTieringConfigurations": undefined,
                                "inventoryConfigurations": "<unresolved-lazy>",
                                "lifecycleConfiguration": "<unresolved-lazy>",
                                "loggingConfiguration": undefined,
                                "metricsConfigurations": "<unresolved-lazy>",
                                "objectLockConfiguration": undefined,
                                "objectLockEnabled": undefined,
                                "ownershipControls": "<unresolved-lazy>",
                                "publicAccessBlockConfiguration": BlockPublicAccess {
                                  "blockPublicAcls": true,
                                  "blockPublicPolicy": true,
                                  "ignorePublicAcls": true,
                                  "restrictPublicBuckets": true,
                                },
                                "replicationConfiguration": undefined,
                                "versioningConfiguration": undefined,
                                "websiteConfiguration": {
                                  "errorDocument": "index.html",
                                  "indexDocument": "index.html",
                                  "redirectAllRequestsTo": undefined,
                                  "routingRules": undefined,
                                },
                              },
                              "accelerateConfiguration": undefined,
                              "accessControl": "\${Token[TOKEN.45]}",
                              "analyticsConfigurations": undefined,
                              "attrArn": "\${Token[TOKEN.47]}",
                              "attrDomainName": "\${Token[TOKEN.48]}",
                              "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                              "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                              "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                              "bucketEncryption": {
                                "serverSideEncryptionConfiguration": [
                                  {
                                    "bucketKeyEnabled": undefined,
                                    "serverSideEncryptionByDefault": {
                                      "sseAlgorithm": "AES256",
                                    },
                                  },
                                ],
                              },
                              "bucketName": "static.assets",
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::S3::Bucket",
                              "corsConfiguration": "<unresolved-lazy>",
                              "dependsOn": Set {},
                              "intelligentTieringConfigurations": undefined,
                              "inventoryConfigurations": "<unresolved-lazy>",
                              "lifecycleConfiguration": "<unresolved-lazy>",
                              "loggingConfiguration": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                              "metadataTableConfiguration": undefined,
                              "metricsConfigurations": "<unresolved-lazy>",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "notificationConfiguration": undefined,
                              "objectLockConfiguration": undefined,
                              "objectLockEnabled": undefined,
                              "ownershipControls": "<unresolved-lazy>",
                              "publicAccessBlockConfiguration": BlockPublicAccess {
                                "blockPublicAcls": true,
                                "blockPublicPolicy": true,
                                "ignorePublicAcls": true,
                                "restrictPublicBuckets": true,
                              },
                              "rawOverrides": {},
                              "replicationConfiguration": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::S3::Bucket",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "versioningConfiguration": undefined,
                              "websiteConfiguration": {
                                "errorDocument": "index.html",
                                "indexDocument": "index.html",
                                "redirectAllRequestsTo": undefined,
                                "routingRules": undefined,
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "accessControl": undefined,
                            "autoCreatePolicy": true,
                            "bucketArn": "\${Token[TOKEN.56]}",
                            "bucketDomainName": "\${Token[TOKEN.48]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                            "bucketName": "\${Token[TOKEN.55]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                            "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                            "cors": [
                              {
                                "allowedHeaders": [
                                  "*",
                                ],
                                "allowedMethods": [
                                  "GET",
                                  "HEAD",
                                ],
                                "allowedOrigins": [
                                  "*",
                                ],
                                "maxAge": 300,
                              },
                            ],
                            "disallowPublicAccess": true,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "eventBridgeEnabled": undefined,
                            "inventories": [],
                            "isWebsite": true,
                            "lifecycleRules": [
                              {
                                "abortIncompleteMultipartUploadAfter": Duration {
                                  "amount": 1,
                                  "unit": TimeUnit {
                                    "inMillis": 86400000,
                                    "isoLabel": "D",
                                    "label": "days",
                                  },
                                },
                                "id": "AbortIncompleteMultipartUploadAfter",
                              },
                            ],
                            "metrics": [],
                            "node": Node {
                              "_children": {
                                "Policy": BucketPolicy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "bucket": [Circular],
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnBucketPolicy {
                                        "_cfnProperties": {
                                          "bucket": "\${Token[TOKEN.55]}",
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "s3:GetObject",
                                                "Condition": {
                                                  "StringEquals": {
                                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                                },
                                                "Resource": "\${Token[TOKEN.56]}/*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                        },
                                        "bucket": "\${Token[TOKEN.55]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::S3::BucketPolicy",
                                        "dependsOn": Set {},
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "s3:GetObject",
                                              "Condition": {
                                                "StringEquals": {
                                                  "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                              },
                                              "Resource": "\${Token[TOKEN.56]}/*",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "rawOverrides": {},
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Policy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.79]}",
                                  "resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnBucket {
                                  "_cfnProperties": {
                                    "accelerateConfiguration": undefined,
                                    "accessControl": "\${Token[TOKEN.45]}",
                                    "bucketEncryption": {
                                      "serverSideEncryptionConfiguration": [
                                        {
                                          "bucketKeyEnabled": undefined,
                                          "serverSideEncryptionByDefault": {
                                            "sseAlgorithm": "AES256",
                                          },
                                        },
                                      ],
                                    },
                                    "bucketName": "static.assets",
                                    "corsConfiguration": "<unresolved-lazy>",
                                    "intelligentTieringConfigurations": undefined,
                                    "inventoryConfigurations": "<unresolved-lazy>",
                                    "lifecycleConfiguration": "<unresolved-lazy>",
                                    "loggingConfiguration": undefined,
                                    "metricsConfigurations": "<unresolved-lazy>",
                                    "objectLockConfiguration": undefined,
                                    "objectLockEnabled": undefined,
                                    "ownershipControls": "<unresolved-lazy>",
                                    "publicAccessBlockConfiguration": BlockPublicAccess {
                                      "blockPublicAcls": true,
                                      "blockPublicPolicy": true,
                                      "ignorePublicAcls": true,
                                      "restrictPublicBuckets": true,
                                    },
                                    "replicationConfiguration": undefined,
                                    "versioningConfiguration": undefined,
                                    "websiteConfiguration": {
                                      "errorDocument": "index.html",
                                      "indexDocument": "index.html",
                                      "redirectAllRequestsTo": undefined,
                                      "routingRules": undefined,
                                    },
                                  },
                                  "accelerateConfiguration": undefined,
                                  "accessControl": "\${Token[TOKEN.45]}",
                                  "analyticsConfigurations": undefined,
                                  "attrArn": "\${Token[TOKEN.47]}",
                                  "attrDomainName": "\${Token[TOKEN.48]}",
                                  "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                                  "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                                  "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                                  "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                                  "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                                  "bucketEncryption": {
                                    "serverSideEncryptionConfiguration": [
                                      {
                                        "bucketKeyEnabled": undefined,
                                        "serverSideEncryptionByDefault": {
                                          "sseAlgorithm": "AES256",
                                        },
                                      },
                                    ],
                                  },
                                  "bucketName": "static.assets",
                                  "cfnOptions": {
                                    "deletionPolicy": "Delete",
                                    "updateReplacePolicy": "Delete",
                                  },
                                  "cfnResourceType": "AWS::S3::Bucket",
                                  "corsConfiguration": "<unresolved-lazy>",
                                  "dependsOn": Set {},
                                  "intelligentTieringConfigurations": undefined,
                                  "inventoryConfigurations": "<unresolved-lazy>",
                                  "lifecycleConfiguration": "<unresolved-lazy>",
                                  "loggingConfiguration": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                  "metadataTableConfiguration": undefined,
                                  "metricsConfigurations": "<unresolved-lazy>",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "notificationConfiguration": undefined,
                                  "objectLockConfiguration": undefined,
                                  "objectLockEnabled": undefined,
                                  "ownershipControls": "<unresolved-lazy>",
                                  "publicAccessBlockConfiguration": BlockPublicAccess {
                                    "blockPublicAcls": true,
                                    "blockPublicPolicy": true,
                                    "ignorePublicAcls": true,
                                    "restrictPublicBuckets": true,
                                  },
                                  "rawOverrides": {},
                                  "replicationConfiguration": undefined,
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::S3::Bucket",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  "versioningConfiguration": undefined,
                                  "websiteConfiguration": {
                                    "errorDocument": "index.html",
                                    "indexDocument": "index.html",
                                    "redirectAllRequestsTo": undefined,
                                    "routingRules": undefined,
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "Bucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "notificationsSkipDestinationValidation": undefined,
                            "objectOwnership": undefined,
                            "physicalName": "static.assets",
                            "policy": BucketPolicy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "bucket": [Circular],
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "node": Node {
                                "_children": {
                                  "Resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Policy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.79]}",
                              "resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "replicationRoleArn": undefined,
                            "stack": [Circular],
                            "transitionDefaultMinimumObjectSize": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "connectionAttempts": undefined,
                          "connectionTimeout": undefined,
                          "customHeaders": undefined,
                          "domainName": "\${Token[TOKEN.52]}",
                          "originAccessControl": S3OriginAccessControl {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "node": Node {
                              "_children": {
                                "Resource": CfnOriginAccessControl {
                                  "_cfnProperties": {
                                    "originAccessControlConfig": {
                                      "description": undefined,
                                      "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                      "originAccessControlOriginType": "s3",
                                      "signingBehavior": "always",
                                      "signingProtocol": "sigv4",
                                    },
                                  },
                                  "attrId": "\${Token[TOKEN.77]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                                  "dependsOn": Set {},
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "originAccessControlConfig": {
                                    "description": undefined,
                                    "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                    "originAccessControlOriginType": "s3",
                                    "signingBehavior": "always",
                                    "signingProtocol": "sigv4",
                                  },
                                  "rawOverrides": {},
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "S3OriginAccessControl",
                              "scope": Construct {
                                "node": Node {
                                  "_children": {
                                    "S3OriginAccessControl": [Circular],
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Origin1",
                                  "scope": [Circular],
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "originAccessControlId": "\${Token[TOKEN.77]}",
                            "physicalName": "\${Token[TOKEN.75]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "originAccessControlId": undefined,
                          "originAccessLevels": undefined,
                          "originId": undefined,
                          "originPath": undefined,
                          "originShieldEnabled": true,
                          "originShieldRegion": undefined,
                        },
                        "originId": "NextJsAppHostedBucketDistributionOrigin148025831",
                        "originProperty": {
                          "connectionAttempts": undefined,
                          "connectionTimeout": undefined,
                          "customOriginConfig": undefined,
                          "domainName": "\${Token[TOKEN.52]}",
                          "id": "NextJsAppHostedBucketDistributionOrigin148025831",
                          "originAccessControlId": "\${Token[TOKEN.77]}",
                          "originCustomHeaders": undefined,
                          "originPath": undefined,
                          "originShield": undefined,
                          "s3OriginConfig": {
                            "originAccessIdentity": "",
                          },
                          "vpcOriginConfig": undefined,
                        },
                      },
                    ],
                    "certificate": DnsValidatedCertificate {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "certificateArn": "\${Token[Default.Arn.44]}",
                      "domainName": "app.s0na.de",
                      "env": {
                        "account": "0000000000",
                        "region": "eu-central-1",
                      },
                      "hostedZoneId": "DUMMY",
                      "node": Node {
                        "_children": {
                          "CertificateRequestorFunction": CertificateRequestCertificateRequestFunction {
                            "_allowCrossEnvironment": false,
                            "_architecture": undefined,
                            "_functionUrlInvocationGrants": {},
                            "_invocationGrants": {},
                            "_layers": [],
                            "_logGroup": undefined,
                            "_physicalName": undefined,
                            "_policyCounter": 0,
                            "_warnIfCurrentVersionCalled": false,
                            "architecture": Architecture {
                              "dockerPlatform": "linux/amd64",
                              "name": "x86_64",
                            },
                            "canCreatePermissions": true,
                            "currentVersionOptions": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "environment": {},
                            "functionArn": "\${Token[TOKEN.33]}",
                            "functionName": "\${Token[TOKEN.32]}",
                            "grantPrincipal": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.20]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.16]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.14]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.19]}",
                                    "attrRoleId": "\${Token[TOKEN.20]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.14]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "didHaveInitialTags": false,
                                      "externalTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    "tagsRaw": undefined,
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.14]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.21]}",
                                  ],
                                },
                              },
                              "principalAccount": "0000000000",
                              "roleArn": "\${Token[TOKEN.21]}",
                              "roleName": "\${Token[TOKEN.23]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "hashMixins": [],
                            "node": Node {
                              "_children": {
                                "Code": Asset {
                                  "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  "bucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                    "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                    "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                    "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.25]}",
                                    "policy": undefined,
                                    "replicationRoleArn": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "httpUrl": "\${Token[TOKEN.24]}",
                                  "isBundled": false,
                                  "isFile": false,
                                  "isZipArchive": true,
                                  "node": Node {
                                    "_children": {
                                      "AssetBucket": Import {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "autoCreatePolicy": false,
                                        "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                        "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                        "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                        "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                        "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                        "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                        "bucketWebsiteNewUrlFormat": false,
                                        "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                        "disallowPublicAccess": false,
                                        "encryptionKey": undefined,
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "isWebsite": false,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "AssetBucket",
                                          "scope": [Circular],
                                        },
                                        "notificationsHandlerRole": undefined,
                                        "physicalName": "\${Token[TOKEN.25]}",
                                        "policy": undefined,
                                        "replicationRoleArn": undefined,
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Stage": AssetStaging {
                                        "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                        "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                        "customSourceFingerprint": undefined,
                                        "fingerprintOptions": {
                                          "assetHash": undefined,
                                          "deployTime": true,
                                          "exclude": [
                                            ".is_custom_resource",
                                          ],
                                          "extraHash": undefined,
                                          "follow": undefined,
                                          "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                          "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        },
                                        "hashType": "source",
                                        "isArchive": true,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Stage",
                                          "scope": [Circular],
                                        },
                                        "packaging": "zip",
                                        "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        "sourceStats": Stats {
                                          "atimeMs": 1746343388554.7612,
                                          "birthtimeMs": 1746343376650.715,
                                          "blksize": 4096,
                                          "blocks": 0,
                                          "ctimeMs": 1746343376650.7883,
                                          "dev": 16777232,
                                          "gid": 20,
                                          "ino": 76011303,
                                          "mode": 16877,
                                          "mtimeMs": 1746343376650.7883,
                                          "nlink": 3,
                                          "rdev": 0,
                                          "size": 96,
                                          "uid": 501,
                                        },
                                        "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Code",
                                    "scope": [Circular],
                                  },
                                  "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3Url": "\${Token[TOKEN.24]}",
                                  "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnFunction {
                                  "_cfnProperties": {
                                    "architectures": undefined,
                                    "code": {
                                      "imageUri": undefined,
                                      "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                      "s3ObjectVersion": undefined,
                                      "sourceKmsKeyArn": undefined,
                                      "zipFile": undefined,
                                    },
                                    "codeSigningConfigArn": undefined,
                                    "deadLetterConfig": undefined,
                                    "description": undefined,
                                    "environment": "<unresolved-lazy>",
                                    "ephemeralStorage": undefined,
                                    "fileSystemConfigs": undefined,
                                    "functionName": "\${Token[TOKEN.13]}",
                                    "handler": "index.certificateRequestHandler",
                                    "imageConfig": undefined,
                                    "kmsKeyArn": undefined,
                                    "layers": [
                                      "#{Token[TOKEN.26]}",
                                    ],
                                    "loggingConfig": undefined,
                                    "memorySize": undefined,
                                    "packageType": undefined,
                                    "recursiveLoop": undefined,
                                    "reservedConcurrentExecutions": undefined,
                                    "role": "\${Token[TOKEN.21]}",
                                    "runtime": "nodejs20.x",
                                    "runtimeManagementConfig": undefined,
                                    "snapStart": undefined,
                                    "timeout": 900,
                                    "vpcConfig": undefined,
                                  },
                                  "architectures": undefined,
                                  "attrArn": "\${Token[TOKEN.28]}",
                                  "attrSnapStartResponse": "<unresolved-token>",
                                  "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                                  "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::Lambda::Function",
                                  "code": {
                                    "imageUri": undefined,
                                    "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                    "s3ObjectVersion": undefined,
                                    "sourceKmsKeyArn": undefined,
                                    "zipFile": undefined,
                                  },
                                  "codeSigningConfigArn": undefined,
                                  "deadLetterConfig": undefined,
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "environment": "<unresolved-lazy>",
                                  "ephemeralStorage": undefined,
                                  "fileSystemConfigs": undefined,
                                  "functionName": "\${Token[TOKEN.13]}",
                                  "handler": "index.certificateRequestHandler",
                                  "imageConfig": undefined,
                                  "kmsKeyArn": undefined,
                                  "layers": [
                                    "#{Token[TOKEN.26]}",
                                  ],
                                  "loggingConfig": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                  "memorySize": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {
                                      Role {
                                        "_allowCrossEnvironment": false,
                                        "_didSplit": false,
                                        "_physicalName": undefined,
                                        "_roleId": "\${Token[TOKEN.20]}",
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "assumeRolePolicy": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [
                                            Policy {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": "\${Token[TOKEN.34]}",
                                              "_policyName": "\${Token[TOKEN.34]}",
                                              "document": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "force": false,
                                              "grantPrincipal": PolicyGrantPrincipal {
                                                "_policy": [Circular],
                                                "assumeRoleAction": "sts:AssumeRole",
                                                "grantPrincipal": [Circular],
                                                "principalAccount": "0000000000",
                                              },
                                              "groups": [],
                                              "node": Node {
                                                "_children": {
                                                  "Resource": CfnPolicyConditional {
                                                    "_cfnProperties": {
                                                      "groups": [
                                                        "#{Token[TOKEN.37]}",
                                                      ],
                                                      "policyDocument": {
                                                        "Statement": [
                                                          {
                                                            "Action": [
                                                              "acm:RequestCertificate",
                                                              "acm:DescribeCertificate",
                                                              "acm:DeleteCertificate",
                                                              "acm:AddTagsToCertificate",
                                                            ],
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:GetChange",
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:changeResourceRecordSets",
                                                            "Condition": {
                                                              "ForAllValues:StringEquals": {
                                                                "route53:ChangeResourceRecordSetsActions": [
                                                                  "UPSERT",
                                                                ],
                                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                  "CNAME",
                                                                ],
                                                              },
                                                              "ForAllValues:StringLike": {
                                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                  "*.app.s0na.de",
                                                                ],
                                                              },
                                                            },
                                                            "Effect": "Allow",
                                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                          },
                                                        ],
                                                        "Version": "2012-10-17",
                                                      },
                                                      "policyName": "\${Token[TOKEN.34]}",
                                                      "roles": [
                                                        "#{Token[TOKEN.35]}",
                                                      ],
                                                      "users": [
                                                        "#{Token[TOKEN.36]}",
                                                      ],
                                                    },
                                                    "attrId": "\${Token[TOKEN.39]}",
                                                    "cfnOptions": {},
                                                    "cfnResourceType": "AWS::IAM::Policy",
                                                    "dependsOn": Set {},
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "node": Node {
                                                      "_children": {},
                                                      "_context": {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": [
                                                        {
                                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                          "trace": undefined,
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "scope": [Circular],
                                                    },
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "rawOverrides": {},
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "stack": [Circular],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                    Symbol(@aws-cdk/core.DependableTrait): {
                                                      "dependencyRoots": [
                                                        [Circular],
                                                      ],
                                                    },
                                                  },
                                                },
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [
                                                  {
                                                    "validate": [Function],
                                                  },
                                                ],
                                                "host": [Circular],
                                                "id": "DefaultPolicy",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.34]}",
                                              "referenceTaken": false,
                                              "roles": [
                                                [Circular],
                                              ],
                                              "stack": [Circular],
                                              "users": [],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        "defaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "dependables": Map {
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "grantPrincipal": [Circular],
                                        "inlinePolicies": {},
                                        "managedPolicies": [
                                          AwsManagedPolicy {
                                            "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                          },
                                        ],
                                        "node": Node {
                                          "_children": {
                                            "DefaultPolicy": Policy {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": "\${Token[TOKEN.34]}",
                                              "_policyName": "\${Token[TOKEN.34]}",
                                              "document": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "force": false,
                                              "grantPrincipal": PolicyGrantPrincipal {
                                                "_policy": [Circular],
                                                "assumeRoleAction": "sts:AssumeRole",
                                                "grantPrincipal": [Circular],
                                                "principalAccount": "0000000000",
                                              },
                                              "groups": [],
                                              "node": Node {
                                                "_children": {
                                                  "Resource": CfnPolicyConditional {
                                                    "_cfnProperties": {
                                                      "groups": [
                                                        "#{Token[TOKEN.37]}",
                                                      ],
                                                      "policyDocument": {
                                                        "Statement": [
                                                          {
                                                            "Action": [
                                                              "acm:RequestCertificate",
                                                              "acm:DescribeCertificate",
                                                              "acm:DeleteCertificate",
                                                              "acm:AddTagsToCertificate",
                                                            ],
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:GetChange",
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:changeResourceRecordSets",
                                                            "Condition": {
                                                              "ForAllValues:StringEquals": {
                                                                "route53:ChangeResourceRecordSetsActions": [
                                                                  "UPSERT",
                                                                ],
                                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                  "CNAME",
                                                                ],
                                                              },
                                                              "ForAllValues:StringLike": {
                                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                  "*.app.s0na.de",
                                                                ],
                                                              },
                                                            },
                                                            "Effect": "Allow",
                                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                          },
                                                        ],
                                                        "Version": "2012-10-17",
                                                      },
                                                      "policyName": "\${Token[TOKEN.34]}",
                                                      "roles": [
                                                        "#{Token[TOKEN.35]}",
                                                      ],
                                                      "users": [
                                                        "#{Token[TOKEN.36]}",
                                                      ],
                                                    },
                                                    "attrId": "\${Token[TOKEN.39]}",
                                                    "cfnOptions": {},
                                                    "cfnResourceType": "AWS::IAM::Policy",
                                                    "dependsOn": Set {},
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "node": Node {
                                                      "_children": {},
                                                      "_context": {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": [
                                                        {
                                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                          "trace": undefined,
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "scope": [Circular],
                                                    },
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "rawOverrides": {},
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "stack": [Circular],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                    Symbol(@aws-cdk/core.DependableTrait): {
                                                      "dependencyRoots": [
                                                        [Circular],
                                                      ],
                                                    },
                                                  },
                                                },
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [
                                                  {
                                                    "validate": [Function],
                                                  },
                                                ],
                                                "host": [Circular],
                                                "id": "DefaultPolicy",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.34]}",
                                              "referenceTaken": false,
                                              "roles": [
                                                [Circular],
                                              ],
                                              "stack": [Circular],
                                              "users": [],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                            "ImportServiceRole": ImportedRole {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": undefined,
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "attachedPolicies": AttachedPolicies {
                                                "policies": [],
                                              },
                                              "defaultPolicyName": undefined,
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "grantPrincipal": [Circular],
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "ImportServiceRole",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.16]}",
                                              "policyFragment": PrincipalPolicyFragment {
                                                "conditions": {},
                                                "principalJson": {
                                                  "AWS": [
                                                    "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                                  ],
                                                },
                                              },
                                              "principalAccount": "0000000000",
                                              "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                              "roleName": "ServiceRole",
                                              "stack": [Circular],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                            "Resource": CfnRole {
                                              "_cfnProperties": {
                                                "assumeRolePolicyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "sts:AssumeRole",
                                                      "Effect": "Allow",
                                                      "Principal": {
                                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                      },
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "description": undefined,
                                                "managedPolicyArns": [
                                                  "#{Token[TOKEN.17]}",
                                                ],
                                                "maxSessionDuration": undefined,
                                                "path": undefined,
                                                "permissionsBoundary": undefined,
                                                "policies": undefined,
                                                "roleName": "\${Token[TOKEN.14]}",
                                              },
                                              "assumeRolePolicyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                    },
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "attrArn": "\${Token[TOKEN.19]}",
                                              "attrRoleId": "\${Token[TOKEN.20]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Role",
                                              "dependsOn": Set {},
                                              "description": undefined,
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                              "managedPolicyArns": [
                                                "#{Token[TOKEN.17]}",
                                              ],
                                              "maxSessionDuration": undefined,
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "path": undefined,
                                              "permissionsBoundary": undefined,
                                              "policies": undefined,
                                              "rawOverrides": {},
                                              "roleName": "\${Token[TOKEN.14]}",
                                              "stack": [Circular],
                                              "tags": TagManager {
                                                "didHaveInitialTags": false,
                                                "externalTagPriority": 50,
                                                "priorities": Map {},
                                                "renderedTags": "<unresolved-lazy>",
                                                "resourceTypeName": "AWS::IAM::Role",
                                                "tagFormatter": StandardFormatter {},
                                                "tagPropertyName": "tags",
                                                "tags": Map {},
                                              },
                                              "tagsRaw": undefined,
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "ServiceRole",
                                          "scope": [Circular],
                                        },
                                        "permissionsBoundary": undefined,
                                        "physicalName": "\${Token[TOKEN.14]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "\${Token[TOKEN.21]}",
                                            ],
                                          },
                                        },
                                        "principalAccount": "0000000000",
                                        "roleArn": "\${Token[TOKEN.21]}",
                                        "roleName": "\${Token[TOKEN.23]}",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "packageType": undefined,
                                  "rawOverrides": {},
                                  "recursiveLoop": undefined,
                                  "reservedConcurrentExecutions": undefined,
                                  "role": "\${Token[TOKEN.21]}",
                                  "runtime": "nodejs20.x",
                                  "runtimeManagementConfig": undefined,
                                  "snapStart": undefined,
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::Lambda::Function",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  "timeout": 900,
                                  "tracingConfig": undefined,
                                  "vpcConfig": undefined,
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ServiceRole": Role {
                                  "_allowCrossEnvironment": false,
                                  "_didSplit": false,
                                  "_physicalName": undefined,
                                  "_roleId": "\${Token[TOKEN.20]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportServiceRole": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportServiceRole",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.16]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "0000000000",
                                        "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        "roleName": "ServiceRole",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": undefined,
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.17]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "\${Token[TOKEN.14]}",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.19]}",
                                        "attrRoleId": "\${Token[TOKEN.20]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": undefined,
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.17]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "\${Token[TOKEN.14]}",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "didHaveInitialTags": false,
                                          "externalTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        "tagsRaw": undefined,
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "ServiceRole",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.14]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.21]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "0000000000",
                                  "roleArn": "\${Token[TOKEN.21]}",
                                  "roleName": "\${Token[TOKEN.23]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": 0,
                                  "trace": undefined,
                                  "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "CertificateRequestorFunction",
                              "scope": [Circular],
                            },
                            "permissionsNode": Node {
                              "_children": {
                                "Code": Asset {
                                  "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  "assetPath": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  "bucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                    "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                    "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                    "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.25]}",
                                    "policy": undefined,
                                    "replicationRoleArn": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "httpUrl": "\${Token[TOKEN.24]}",
                                  "isBundled": false,
                                  "isFile": false,
                                  "isZipArchive": true,
                                  "node": Node {
                                    "_children": {
                                      "AssetBucket": Import {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "autoCreatePolicy": false,
                                        "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::cdk-hnb659fds-assets-0000000000-eu-central-1",
                                        "bucketDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.amazonaws.com",
                                        "bucketDualStackDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.dualstack.eu-central-1.amazonaws.com",
                                        "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                        "bucketRegionalDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3.eu-central-1.amazonaws.com",
                                        "bucketWebsiteDomainName": "cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                        "bucketWebsiteNewUrlFormat": false,
                                        "bucketWebsiteUrl": "http://cdk-hnb659fds-assets-0000000000-eu-central-1.s3-website.eu-central-1.amazonaws.com",
                                        "disallowPublicAccess": false,
                                        "encryptionKey": undefined,
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "isWebsite": false,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "AssetBucket",
                                          "scope": [Circular],
                                        },
                                        "notificationsHandlerRole": undefined,
                                        "physicalName": "\${Token[TOKEN.25]}",
                                        "policy": undefined,
                                        "replicationRoleArn": undefined,
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Stage": AssetStaging {
                                        "absoluteStagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        "assetHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        "assetOutdir": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN",
                                        "cacheKey": "56d140eb9fde6993621b8c2e02377a834541dd75c260d5e2f7e9105ffeb1943d",
                                        "customSourceFingerprint": undefined,
                                        "fingerprintOptions": {
                                          "assetHash": undefined,
                                          "deployTime": true,
                                          "exclude": [
                                            ".is_custom_resource",
                                          ],
                                          "extraHash": undefined,
                                          "follow": undefined,
                                          "path": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                          "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        },
                                        "hashType": "source",
                                        "isArchive": true,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Stage",
                                          "scope": [Circular],
                                        },
                                        "packaging": "zip",
                                        "sourcePath": "/Users/d4ndel1on/dev/projects/next-deployer/node_modules/aws-cdk-lib/custom-resource-handlers/dist/aws-certificatemanager/dns-validated-certificate-handler",
                                        "sourceStats": Stats {
                                          "atimeMs": 1746343388554.7612,
                                          "birthtimeMs": 1746343376650.715,
                                          "blksize": 4096,
                                          "blocks": 0,
                                          "ctimeMs": 1746343376650.7883,
                                          "dev": 16777232,
                                          "gid": 20,
                                          "ino": 76011303,
                                          "mode": 16877,
                                          "mtimeMs": 1746343376650.7883,
                                          "nlink": 3,
                                          "rdev": 0,
                                          "size": 96,
                                          "uid": 501,
                                        },
                                        "stagedPath": "/private/var/folders/dk/2x__4tf57hsb84mwd47p8zcr0000gn/T/cdk.outebRfFN/asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Code",
                                    "scope": [Circular],
                                  },
                                  "s3BucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                  "s3ObjectKey": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3ObjectUrl": "s3://cdk-hnb659fds-assets-0000000000-eu-central-1/b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                  "s3Url": "\${Token[TOKEN.24]}",
                                  "sourceHash": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnFunction {
                                  "_cfnProperties": {
                                    "architectures": undefined,
                                    "code": {
                                      "imageUri": undefined,
                                      "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                      "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                      "s3ObjectVersion": undefined,
                                      "sourceKmsKeyArn": undefined,
                                      "zipFile": undefined,
                                    },
                                    "codeSigningConfigArn": undefined,
                                    "deadLetterConfig": undefined,
                                    "description": undefined,
                                    "environment": "<unresolved-lazy>",
                                    "ephemeralStorage": undefined,
                                    "fileSystemConfigs": undefined,
                                    "functionName": "\${Token[TOKEN.13]}",
                                    "handler": "index.certificateRequestHandler",
                                    "imageConfig": undefined,
                                    "kmsKeyArn": undefined,
                                    "layers": [
                                      "#{Token[TOKEN.26]}",
                                    ],
                                    "loggingConfig": undefined,
                                    "memorySize": undefined,
                                    "packageType": undefined,
                                    "recursiveLoop": undefined,
                                    "reservedConcurrentExecutions": undefined,
                                    "role": "\${Token[TOKEN.21]}",
                                    "runtime": "nodejs20.x",
                                    "runtimeManagementConfig": undefined,
                                    "snapStart": undefined,
                                    "timeout": 900,
                                    "vpcConfig": undefined,
                                  },
                                  "architectures": undefined,
                                  "attrArn": "\${Token[TOKEN.28]}",
                                  "attrSnapStartResponse": "<unresolved-token>",
                                  "attrSnapStartResponseApplyOn": "\${Token[TOKEN.29]}",
                                  "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.30]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::Lambda::Function",
                                  "code": {
                                    "imageUri": undefined,
                                    "s3Bucket": "cdk-hnb659fds-assets-0000000000-eu-central-1",
                                    "s3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
                                    "s3ObjectVersion": undefined,
                                    "sourceKmsKeyArn": undefined,
                                    "zipFile": undefined,
                                  },
                                  "codeSigningConfigArn": undefined,
                                  "deadLetterConfig": undefined,
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "environment": "<unresolved-lazy>",
                                  "ephemeralStorage": undefined,
                                  "fileSystemConfigs": undefined,
                                  "functionName": "\${Token[TOKEN.13]}",
                                  "handler": "index.certificateRequestHandler",
                                  "imageConfig": undefined,
                                  "kmsKeyArn": undefined,
                                  "layers": [
                                    "#{Token[TOKEN.26]}",
                                  ],
                                  "loggingConfig": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                  "memorySize": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {
                                      Role {
                                        "_allowCrossEnvironment": false,
                                        "_didSplit": false,
                                        "_physicalName": undefined,
                                        "_roleId": "\${Token[TOKEN.20]}",
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "assumeRolePolicy": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [
                                            Policy {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": "\${Token[TOKEN.34]}",
                                              "_policyName": "\${Token[TOKEN.34]}",
                                              "document": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "force": false,
                                              "grantPrincipal": PolicyGrantPrincipal {
                                                "_policy": [Circular],
                                                "assumeRoleAction": "sts:AssumeRole",
                                                "grantPrincipal": [Circular],
                                                "principalAccount": "0000000000",
                                              },
                                              "groups": [],
                                              "node": Node {
                                                "_children": {
                                                  "Resource": CfnPolicyConditional {
                                                    "_cfnProperties": {
                                                      "groups": [
                                                        "#{Token[TOKEN.37]}",
                                                      ],
                                                      "policyDocument": {
                                                        "Statement": [
                                                          {
                                                            "Action": [
                                                              "acm:RequestCertificate",
                                                              "acm:DescribeCertificate",
                                                              "acm:DeleteCertificate",
                                                              "acm:AddTagsToCertificate",
                                                            ],
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:GetChange",
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:changeResourceRecordSets",
                                                            "Condition": {
                                                              "ForAllValues:StringEquals": {
                                                                "route53:ChangeResourceRecordSetsActions": [
                                                                  "UPSERT",
                                                                ],
                                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                  "CNAME",
                                                                ],
                                                              },
                                                              "ForAllValues:StringLike": {
                                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                  "*.app.s0na.de",
                                                                ],
                                                              },
                                                            },
                                                            "Effect": "Allow",
                                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                          },
                                                        ],
                                                        "Version": "2012-10-17",
                                                      },
                                                      "policyName": "\${Token[TOKEN.34]}",
                                                      "roles": [
                                                        "#{Token[TOKEN.35]}",
                                                      ],
                                                      "users": [
                                                        "#{Token[TOKEN.36]}",
                                                      ],
                                                    },
                                                    "attrId": "\${Token[TOKEN.39]}",
                                                    "cfnOptions": {},
                                                    "cfnResourceType": "AWS::IAM::Policy",
                                                    "dependsOn": Set {},
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "node": Node {
                                                      "_children": {},
                                                      "_context": {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": [
                                                        {
                                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                          "trace": undefined,
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "scope": [Circular],
                                                    },
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "rawOverrides": {},
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "stack": [Circular],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                    Symbol(@aws-cdk/core.DependableTrait): {
                                                      "dependencyRoots": [
                                                        [Circular],
                                                      ],
                                                    },
                                                  },
                                                },
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [
                                                  {
                                                    "validate": [Function],
                                                  },
                                                ],
                                                "host": [Circular],
                                                "id": "DefaultPolicy",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.34]}",
                                              "referenceTaken": false,
                                              "roles": [
                                                [Circular],
                                              ],
                                              "stack": [Circular],
                                              "users": [],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        "defaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.34]}",
                                          "_policyName": "\${Token[TOKEN.34]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "0000000000",
                                            "region": "eu-central-1",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "0000000000",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.37]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": [
                                                          "acm:RequestCertificate",
                                                          "acm:DescribeCertificate",
                                                          "acm:DeleteCertificate",
                                                          "acm:AddTagsToCertificate",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:GetChange",
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": "route53:changeResourceRecordSets",
                                                        "Condition": {
                                                          "ForAllValues:StringEquals": {
                                                            "route53:ChangeResourceRecordSetsActions": [
                                                              "UPSERT",
                                                            ],
                                                            "route53:ChangeResourceRecordSetsRecordTypes": [
                                                              "CNAME",
                                                            ],
                                                          },
                                                          "ForAllValues:StringLike": {
                                                            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                              "*.app.s0na.de",
                                                            ],
                                                          },
                                                        },
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.34]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.35]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.36]}",
                                                  ],
                                                },
                                                "attrId": "\${Token[TOKEN.39]}",
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.34]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "dependables": Map {
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          } => DependencyGroup {
                                            "_deps": [],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [],
                                            },
                                          },
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "grantPrincipal": [Circular],
                                        "inlinePolicies": {},
                                        "managedPolicies": [
                                          AwsManagedPolicy {
                                            "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                          },
                                        ],
                                        "node": Node {
                                          "_children": {
                                            "DefaultPolicy": Policy {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": "\${Token[TOKEN.34]}",
                                              "_policyName": "\${Token[TOKEN.34]}",
                                              "document": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "force": false,
                                              "grantPrincipal": PolicyGrantPrincipal {
                                                "_policy": [Circular],
                                                "assumeRoleAction": "sts:AssumeRole",
                                                "grantPrincipal": [Circular],
                                                "principalAccount": "0000000000",
                                              },
                                              "groups": [],
                                              "node": Node {
                                                "_children": {
                                                  "Resource": CfnPolicyConditional {
                                                    "_cfnProperties": {
                                                      "groups": [
                                                        "#{Token[TOKEN.37]}",
                                                      ],
                                                      "policyDocument": {
                                                        "Statement": [
                                                          {
                                                            "Action": [
                                                              "acm:RequestCertificate",
                                                              "acm:DescribeCertificate",
                                                              "acm:DeleteCertificate",
                                                              "acm:AddTagsToCertificate",
                                                            ],
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:GetChange",
                                                            "Effect": "Allow",
                                                            "Resource": "*",
                                                          },
                                                          {
                                                            "Action": "route53:changeResourceRecordSets",
                                                            "Condition": {
                                                              "ForAllValues:StringEquals": {
                                                                "route53:ChangeResourceRecordSetsActions": [
                                                                  "UPSERT",
                                                                ],
                                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                  "CNAME",
                                                                ],
                                                              },
                                                              "ForAllValues:StringLike": {
                                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                  "*.app.s0na.de",
                                                                ],
                                                              },
                                                            },
                                                            "Effect": "Allow",
                                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                          },
                                                        ],
                                                        "Version": "2012-10-17",
                                                      },
                                                      "policyName": "\${Token[TOKEN.34]}",
                                                      "roles": [
                                                        "#{Token[TOKEN.35]}",
                                                      ],
                                                      "users": [
                                                        "#{Token[TOKEN.36]}",
                                                      ],
                                                    },
                                                    "attrId": "\${Token[TOKEN.39]}",
                                                    "cfnOptions": {},
                                                    "cfnResourceType": "AWS::IAM::Policy",
                                                    "dependsOn": Set {},
                                                    "groups": [
                                                      "#{Token[TOKEN.37]}",
                                                    ],
                                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "node": Node {
                                                      "_children": {},
                                                      "_context": {},
                                                      "_dependencies": Set {},
                                                      "_locked": false,
                                                      "_metadata": [
                                                        {
                                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                          "trace": undefined,
                                                          "type": "aws:cdk:logicalId",
                                                        },
                                                      ],
                                                      "_validations": [],
                                                      "host": [Circular],
                                                      "id": "Resource",
                                                      "scope": [Circular],
                                                    },
                                                    "policyDocument": {
                                                      "Statement": [
                                                        {
                                                          "Action": [
                                                            "acm:RequestCertificate",
                                                            "acm:DescribeCertificate",
                                                            "acm:DeleteCertificate",
                                                            "acm:AddTagsToCertificate",
                                                          ],
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:GetChange",
                                                          "Effect": "Allow",
                                                          "Resource": "*",
                                                        },
                                                        {
                                                          "Action": "route53:changeResourceRecordSets",
                                                          "Condition": {
                                                            "ForAllValues:StringEquals": {
                                                              "route53:ChangeResourceRecordSetsActions": [
                                                                "UPSERT",
                                                              ],
                                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                                "CNAME",
                                                              ],
                                                            },
                                                            "ForAllValues:StringLike": {
                                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                                "*.app.s0na.de",
                                                              ],
                                                            },
                                                          },
                                                          "Effect": "Allow",
                                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                        },
                                                      ],
                                                      "Version": "2012-10-17",
                                                    },
                                                    "policyName": "\${Token[TOKEN.34]}",
                                                    "rawOverrides": {},
                                                    "roles": [
                                                      "#{Token[TOKEN.35]}",
                                                    ],
                                                    "stack": [Circular],
                                                    "users": [
                                                      "#{Token[TOKEN.36]}",
                                                    ],
                                                    Symbol(@aws-cdk/core.DependableTrait): {
                                                      "dependencyRoots": [
                                                        [Circular],
                                                      ],
                                                    },
                                                  },
                                                },
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [
                                                  {
                                                    "validate": [Function],
                                                  },
                                                ],
                                                "host": [Circular],
                                                "id": "DefaultPolicy",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.34]}",
                                              "referenceTaken": false,
                                              "roles": [
                                                [Circular],
                                              ],
                                              "stack": [Circular],
                                              "users": [],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                            "ImportServiceRole": ImportedRole {
                                              "_allowCrossEnvironment": false,
                                              "_physicalName": undefined,
                                              "assumeRoleAction": "sts:AssumeRole",
                                              "attachedPolicies": AttachedPolicies {
                                                "policies": [],
                                              },
                                              "defaultPolicyName": undefined,
                                              "env": {
                                                "account": "0000000000",
                                                "region": "eu-central-1",
                                              },
                                              "grantPrincipal": [Circular],
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "ImportServiceRole",
                                                "scope": [Circular],
                                              },
                                              "physicalName": "\${Token[TOKEN.16]}",
                                              "policyFragment": PrincipalPolicyFragment {
                                                "conditions": {},
                                                "principalJson": {
                                                  "AWS": [
                                                    "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                                  ],
                                                },
                                              },
                                              "principalAccount": "0000000000",
                                              "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                              "roleName": "ServiceRole",
                                              "stack": [Circular],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                            "Resource": CfnRole {
                                              "_cfnProperties": {
                                                "assumeRolePolicyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "sts:AssumeRole",
                                                      "Effect": "Allow",
                                                      "Principal": {
                                                        "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                      },
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "description": undefined,
                                                "managedPolicyArns": [
                                                  "#{Token[TOKEN.17]}",
                                                ],
                                                "maxSessionDuration": undefined,
                                                "path": undefined,
                                                "permissionsBoundary": undefined,
                                                "policies": undefined,
                                                "roleName": "\${Token[TOKEN.14]}",
                                              },
                                              "assumeRolePolicyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                    },
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "attrArn": "\${Token[TOKEN.19]}",
                                              "attrRoleId": "\${Token[TOKEN.20]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Role",
                                              "dependsOn": Set {},
                                              "description": undefined,
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                              "managedPolicyArns": [
                                                "#{Token[TOKEN.17]}",
                                              ],
                                              "maxSessionDuration": undefined,
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "path": undefined,
                                              "permissionsBoundary": undefined,
                                              "policies": undefined,
                                              "rawOverrides": {},
                                              "roleName": "\${Token[TOKEN.14]}",
                                              "stack": [Circular],
                                              "tags": TagManager {
                                                "didHaveInitialTags": false,
                                                "externalTagPriority": 50,
                                                "priorities": Map {},
                                                "renderedTags": "<unresolved-lazy>",
                                                "resourceTypeName": "AWS::IAM::Role",
                                                "tagFormatter": StandardFormatter {},
                                                "tagPropertyName": "tags",
                                                "tags": Map {},
                                              },
                                              "tagsRaw": undefined,
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "ServiceRole",
                                          "scope": [Circular],
                                        },
                                        "permissionsBoundary": undefined,
                                        "physicalName": "\${Token[TOKEN.14]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "\${Token[TOKEN.21]}",
                                            ],
                                          },
                                        },
                                        "principalAccount": "0000000000",
                                        "roleArn": "\${Token[TOKEN.21]}",
                                        "roleName": "\${Token[TOKEN.23]}",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.Resource.LogicalID.27]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "packageType": undefined,
                                  "rawOverrides": {},
                                  "recursiveLoop": undefined,
                                  "reservedConcurrentExecutions": undefined,
                                  "role": "\${Token[TOKEN.21]}",
                                  "runtime": "nodejs20.x",
                                  "runtimeManagementConfig": undefined,
                                  "snapStart": undefined,
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::Lambda::Function",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  "timeout": 900,
                                  "tracingConfig": undefined,
                                  "vpcConfig": undefined,
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ServiceRole": Role {
                                  "_allowCrossEnvironment": false,
                                  "_didSplit": false,
                                  "_physicalName": undefined,
                                  "_roleId": "\${Token[TOKEN.20]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.15]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.34]}",
                                        "_policyName": "\${Token[TOKEN.34]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "0000000000",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.37]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "acm:RequestCertificate",
                                                        "acm:DescribeCertificate",
                                                        "acm:DeleteCertificate",
                                                        "acm:AddTagsToCertificate",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:GetChange",
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": "route53:changeResourceRecordSets",
                                                      "Condition": {
                                                        "ForAllValues:StringEquals": {
                                                          "route53:ChangeResourceRecordSetsActions": [
                                                            "UPSERT",
                                                          ],
                                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                                            "CNAME",
                                                          ],
                                                        },
                                                        "ForAllValues:StringLike": {
                                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                            "*.app.s0na.de",
                                                          ],
                                                        },
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.34]}",
                                                "roles": [
                                                  "#{Token[TOKEN.35]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.36]}",
                                                ],
                                              },
                                              "attrId": "\${Token[TOKEN.39]}",
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.37]}",
                                              ],
                                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": [
                                                      "acm:RequestCertificate",
                                                      "acm:DescribeCertificate",
                                                      "acm:DeleteCertificate",
                                                      "acm:AddTagsToCertificate",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:GetChange",
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": "route53:changeResourceRecordSets",
                                                    "Condition": {
                                                      "ForAllValues:StringEquals": {
                                                        "route53:ChangeResourceRecordSetsActions": [
                                                          "UPSERT",
                                                        ],
                                                        "route53:ChangeResourceRecordSetsRecordTypes": [
                                                          "CNAME",
                                                        ],
                                                      },
                                                      "ForAllValues:StringLike": {
                                                        "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                          "*.app.s0na.de",
                                                        ],
                                                      },
                                                    },
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.34]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.35]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.36]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.34]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportServiceRole": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "0000000000",
                                          "region": "eu-central-1",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportServiceRole",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.16]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "0000000000",
                                        "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        "roleName": "ServiceRole",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.15]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": undefined,
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.17]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "\${Token[TOKEN.14]}",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.15]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.19]}",
                                        "attrRoleId": "\${Token[TOKEN.20]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": undefined,
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.17]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "\${Token[TOKEN.14]}",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "didHaveInitialTags": false,
                                          "externalTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        "tagsRaw": undefined,
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "ServiceRole",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.14]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.21]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "0000000000",
                                  "roleArn": "\${Token[TOKEN.21]}",
                                  "roleName": "\${Token[TOKEN.23]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": 0,
                                  "trace": undefined,
                                  "type": "aws:cdk:is-custom-resource-handler-runtime-family",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "CertificateRequestorFunction",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.13]}",
                            "role": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.20]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.15]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.34]}",
                                "_policyName": "\${Token[TOKEN.34]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "acm:RequestCertificate",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:AddTagsToCertificate",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:GetChange",
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": "route53:changeResourceRecordSets",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "route53:ChangeResourceRecordSetsActions": [
                                            "UPSERT",
                                          ],
                                          "route53:ChangeResourceRecordSetsRecordTypes": [
                                            "CNAME",
                                          ],
                                        },
                                        "ForAllValues:StringLike": {
                                          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                            "*.app.s0na.de",
                                          ],
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "0000000000",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.37]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "acm:RequestCertificate",
                                                "acm:DescribeCertificate",
                                                "acm:DeleteCertificate",
                                                "acm:AddTagsToCertificate",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:GetChange",
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": "route53:changeResourceRecordSets",
                                              "Condition": {
                                                "ForAllValues:StringEquals": {
                                                  "route53:ChangeResourceRecordSetsActions": [
                                                    "UPSERT",
                                                  ],
                                                  "route53:ChangeResourceRecordSetsRecordTypes": [
                                                    "CNAME",
                                                  ],
                                                },
                                                "ForAllValues:StringLike": {
                                                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                    "*.app.s0na.de",
                                                  ],
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.34]}",
                                        "roles": [
                                          "#{Token[TOKEN.35]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.36]}",
                                        ],
                                      },
                                      "attrId": "\${Token[TOKEN.39]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.37]}",
                                      ],
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": [
                                              "acm:RequestCertificate",
                                              "acm:DescribeCertificate",
                                              "acm:DeleteCertificate",
                                              "acm:AddTagsToCertificate",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:GetChange",
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": "route53:changeResourceRecordSets",
                                            "Condition": {
                                              "ForAllValues:StringEquals": {
                                                "route53:ChangeResourceRecordSetsActions": [
                                                  "UPSERT",
                                                ],
                                                "route53:ChangeResourceRecordSetsRecordTypes": [
                                                  "CNAME",
                                                ],
                                              },
                                              "ForAllValues:StringLike": {
                                                "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                  "*.app.s0na.de",
                                                ],
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.34]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.35]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.36]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.34]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": [
                                    "acm:RequestCertificate",
                                    "acm:DescribeCertificate",
                                    "acm:DeleteCertificate",
                                    "acm:AddTagsToCertificate",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:GetChange",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                                {
                                  "Action": "route53:changeResourceRecordSets",
                                  "Condition": {
                                    "ForAllValues:StringEquals": {
                                      "route53:ChangeResourceRecordSetsActions": [
                                        "UPSERT",
                                      ],
                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                        "CNAME",
                                      ],
                                    },
                                    "ForAllValues:StringLike": {
                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                        "*.app.s0na.de",
                                      ],
                                    },
                                  },
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.6]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.34]}",
                                    "_policyName": "\${Token[TOKEN.34]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "acm:RequestCertificate",
                                            "acm:DescribeCertificate",
                                            "acm:DeleteCertificate",
                                            "acm:AddTagsToCertificate",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:GetChange",
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": "route53:changeResourceRecordSets",
                                          "Condition": {
                                            "ForAllValues:StringEquals": {
                                              "route53:ChangeResourceRecordSetsActions": [
                                                "UPSERT",
                                              ],
                                              "route53:ChangeResourceRecordSetsRecordTypes": [
                                                "CNAME",
                                              ],
                                            },
                                            "ForAllValues:StringLike": {
                                              "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                "*.app.s0na.de",
                                              ],
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "0000000000",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.37]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "acm:RequestCertificate",
                                                    "acm:DescribeCertificate",
                                                    "acm:DeleteCertificate",
                                                    "acm:AddTagsToCertificate",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:GetChange",
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": "route53:changeResourceRecordSets",
                                                  "Condition": {
                                                    "ForAllValues:StringEquals": {
                                                      "route53:ChangeResourceRecordSetsActions": [
                                                        "UPSERT",
                                                      ],
                                                      "route53:ChangeResourceRecordSetsRecordTypes": [
                                                        "CNAME",
                                                      ],
                                                    },
                                                    "ForAllValues:StringLike": {
                                                      "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                        "*.app.s0na.de",
                                                      ],
                                                    },
                                                  },
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.34]}",
                                            "roles": [
                                              "#{Token[TOKEN.35]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.36]}",
                                            ],
                                          },
                                          "attrId": "\${Token[TOKEN.39]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.37]}",
                                          ],
                                          "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.DefaultPolicy.Resource.LogicalID.38]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": [
                                                  "acm:RequestCertificate",
                                                  "acm:DescribeCertificate",
                                                  "acm:DeleteCertificate",
                                                  "acm:AddTagsToCertificate",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:GetChange",
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": "route53:changeResourceRecordSets",
                                                "Condition": {
                                                  "ForAllValues:StringEquals": {
                                                    "route53:ChangeResourceRecordSetsActions": [
                                                      "UPSERT",
                                                    ],
                                                    "route53:ChangeResourceRecordSetsRecordTypes": [
                                                      "CNAME",
                                                    ],
                                                  },
                                                  "ForAllValues:StringLike": {
                                                    "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                                                      "*.app.s0na.de",
                                                    ],
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.6]}:route53:::hostedzone/DUMMY",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.34]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.35]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.36]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.34]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "0000000000",
                                      "region": "eu-central-1",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.16]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "0000000000",
                                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::0000000000:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.15]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.17]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.14]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.15]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.19]}",
                                    "attrRoleId": "\${Token[TOKEN.20]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.17]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorFunction.ServiceRole.Resource.LogicalID.18]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.14]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "didHaveInitialTags": false,
                                      "externalTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    "tagsRaw": undefined,
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.14]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.21]}",
                                  ],
                                },
                              },
                              "principalAccount": "0000000000",
                              "roleArn": "\${Token[TOKEN.21]}",
                              "roleName": "\${Token[TOKEN.23]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "runtime": Runtime {
                              "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
                              "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
                              "family": 0,
                              "isVariable": true,
                              "name": "nodejs20.x",
                              "supportsCodeGuruProfiling": false,
                              "supportsInlineCode": true,
                              "supportsSnapStart": false,
                            },
                            "stack": [Circular],
                            "timeout": Duration {
                              "amount": 15,
                              "unit": TimeUnit {
                                "inMillis": 60000,
                                "isoLabel": "M",
                                "label": "minutes",
                              },
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "CertificateRequestorResource": CustomResource {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "node": Node {
                              "_children": {
                                "Default": CfnResource {
                                  "_cfnProperties": {
                                    "CertificateTransparencyLoggingPreference": undefined,
                                    "CleanupRecords": undefined,
                                    "DomainName": "app.s0na.de",
                                    "HostedZoneId": "DUMMY",
                                    "Region": "us-east-1",
                                    "RemovalPolicy": "<unresolved-lazy>",
                                    "Route53Endpoint": undefined,
                                    "ServiceTimeout": undefined,
                                    "ServiceToken": "\${Token[TOKEN.33]}",
                                    "SubjectAlternativeNames": [
                                      "#{Token[TOKEN.40]}",
                                    ],
                                    "Tags": [
                                      "#{Token[TOKEN.41]}",
                                    ],
                                  },
                                  "cfnOptions": {
                                    "deletionPolicy": "Delete",
                                    "updateReplacePolicy": "Delete",
                                  },
                                  "cfnResourceType": "AWS::CloudFormation::CustomResource",
                                  "dependsOn": Set {},
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Default",
                                    "scope": [Circular],
                                  },
                                  "rawOverrides": {},
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "CertificateRequestorResource",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.42]}",
                            "resource": CfnResource {
                              "_cfnProperties": {
                                "CertificateTransparencyLoggingPreference": undefined,
                                "CleanupRecords": undefined,
                                "DomainName": "app.s0na.de",
                                "HostedZoneId": "DUMMY",
                                "Region": "us-east-1",
                                "RemovalPolicy": "<unresolved-lazy>",
                                "Route53Endpoint": undefined,
                                "ServiceTimeout": undefined,
                                "ServiceToken": "\${Token[TOKEN.33]}",
                                "SubjectAlternativeNames": [
                                  "#{Token[TOKEN.40]}",
                                ],
                                "Tags": [
                                  "#{Token[TOKEN.41]}",
                                ],
                              },
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::CloudFormation::CustomResource",
                              "dependsOn": Set {},
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Certificate.CertificateRequestorResource.Default.LogicalID.43]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Default",
                                "scope": [Circular],
                              },
                              "rawOverrides": {},
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "Certificate",
                        "scope": [Circular],
                      },
                      "normalizedZoneName": "s0na.de",
                      "physicalName": "\${Token[TOKEN.12]}",
                      "region": "us-east-1",
                      "stack": [Circular],
                      "tags": TagManager {
                        "didHaveInitialTags": false,
                        "externalTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::CertificateManager::Certificate",
                        "tagFormatter": MapFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "defaultBehavior": CacheBehavior {
                      "originId": "NextJsAppHostedBucketDistributionOrigin148025831",
                      "props": {
                        "cachePolicy": CachePolicy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "cachePolicyId": "\${Token[TOKEN.63]}",
                          "env": {
                            "account": "0000000000",
                            "region": "eu-central-1",
                          },
                          "node": Node {
                            "_children": {
                              "Resource": CfnCachePolicy {
                                "_cfnProperties": {
                                  "cachePolicyConfig": {
                                    "comment": "Cache HostedBucket Bucket",
                                    "defaultTtl": 2592000,
                                    "maxTtl": 2592000,
                                    "minTtl": 2592000,
                                    "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                                    "parametersInCacheKeyAndForwardedToOrigin": {
                                      "cookiesConfig": {
                                        "cookieBehavior": "none",
                                        "cookies": undefined,
                                      },
                                      "enableAcceptEncodingBrotli": false,
                                      "enableAcceptEncodingGzip": false,
                                      "headersConfig": {
                                        "headerBehavior": "none",
                                        "headers": undefined,
                                      },
                                      "queryStringsConfig": {
                                        "queryStringBehavior": "none",
                                        "queryStrings": undefined,
                                      },
                                    },
                                  },
                                },
                                "attrId": "\${Token[TOKEN.61]}",
                                "attrLastModifiedTime": "\${Token[TOKEN.62]}",
                                "cachePolicyConfig": {
                                  "comment": "Cache HostedBucket Bucket",
                                  "defaultTtl": 2592000,
                                  "maxTtl": 2592000,
                                  "minTtl": 2592000,
                                  "name": "NextJsAppHostedBucketCachePolicy60E589BC-eu-central-1",
                                  "parametersInCacheKeyAndForwardedToOrigin": {
                                    "cookiesConfig": {
                                      "cookieBehavior": "none",
                                      "cookies": undefined,
                                    },
                                    "enableAcceptEncodingBrotli": false,
                                    "enableAcceptEncodingGzip": false,
                                    "headersConfig": {
                                      "headerBehavior": "none",
                                      "headers": undefined,
                                    },
                                    "queryStringsConfig": {
                                      "queryStringBehavior": "none",
                                      "queryStrings": undefined,
                                    },
                                  },
                                },
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::CloudFront::CachePolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.CachePolicy.Resource.LogicalID.60]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "CachePolicy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.59]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "compress": true,
                        "origin": S3BucketOriginWithOAC {
                          "bucket": Bucket {
                            "_allowCrossEnvironment": true,
                            "_physicalName": "static.assets",
                            "_resource": CfnBucket {
                              "_cfnProperties": {
                                "accelerateConfiguration": undefined,
                                "accessControl": "\${Token[TOKEN.45]}",
                                "bucketEncryption": {
                                  "serverSideEncryptionConfiguration": [
                                    {
                                      "bucketKeyEnabled": undefined,
                                      "serverSideEncryptionByDefault": {
                                        "sseAlgorithm": "AES256",
                                      },
                                    },
                                  ],
                                },
                                "bucketName": "static.assets",
                                "corsConfiguration": "<unresolved-lazy>",
                                "intelligentTieringConfigurations": undefined,
                                "inventoryConfigurations": "<unresolved-lazy>",
                                "lifecycleConfiguration": "<unresolved-lazy>",
                                "loggingConfiguration": undefined,
                                "metricsConfigurations": "<unresolved-lazy>",
                                "objectLockConfiguration": undefined,
                                "objectLockEnabled": undefined,
                                "ownershipControls": "<unresolved-lazy>",
                                "publicAccessBlockConfiguration": BlockPublicAccess {
                                  "blockPublicAcls": true,
                                  "blockPublicPolicy": true,
                                  "ignorePublicAcls": true,
                                  "restrictPublicBuckets": true,
                                },
                                "replicationConfiguration": undefined,
                                "versioningConfiguration": undefined,
                                "websiteConfiguration": {
                                  "errorDocument": "index.html",
                                  "indexDocument": "index.html",
                                  "redirectAllRequestsTo": undefined,
                                  "routingRules": undefined,
                                },
                              },
                              "accelerateConfiguration": undefined,
                              "accessControl": "\${Token[TOKEN.45]}",
                              "analyticsConfigurations": undefined,
                              "attrArn": "\${Token[TOKEN.47]}",
                              "attrDomainName": "\${Token[TOKEN.48]}",
                              "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                              "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                              "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                              "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                              "bucketEncryption": {
                                "serverSideEncryptionConfiguration": [
                                  {
                                    "bucketKeyEnabled": undefined,
                                    "serverSideEncryptionByDefault": {
                                      "sseAlgorithm": "AES256",
                                    },
                                  },
                                ],
                              },
                              "bucketName": "static.assets",
                              "cfnOptions": {
                                "deletionPolicy": "Delete",
                                "updateReplacePolicy": "Delete",
                              },
                              "cfnResourceType": "AWS::S3::Bucket",
                              "corsConfiguration": "<unresolved-lazy>",
                              "dependsOn": Set {},
                              "intelligentTieringConfigurations": undefined,
                              "inventoryConfigurations": "<unresolved-lazy>",
                              "lifecycleConfiguration": "<unresolved-lazy>",
                              "loggingConfiguration": undefined,
                              "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                              "metadataTableConfiguration": undefined,
                              "metricsConfigurations": "<unresolved-lazy>",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "notificationConfiguration": undefined,
                              "objectLockConfiguration": undefined,
                              "objectLockEnabled": undefined,
                              "ownershipControls": "<unresolved-lazy>",
                              "publicAccessBlockConfiguration": BlockPublicAccess {
                                "blockPublicAcls": true,
                                "blockPublicPolicy": true,
                                "ignorePublicAcls": true,
                                "restrictPublicBuckets": true,
                              },
                              "rawOverrides": {},
                              "replicationConfiguration": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "didHaveInitialTags": false,
                                "externalTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::S3::Bucket",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "tagsRaw": undefined,
                              "versioningConfiguration": undefined,
                              "websiteConfiguration": {
                                "errorDocument": "index.html",
                                "indexDocument": "index.html",
                                "redirectAllRequestsTo": undefined,
                                "routingRules": undefined,
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "accessControl": undefined,
                            "autoCreatePolicy": true,
                            "bucketArn": "\${Token[TOKEN.56]}",
                            "bucketDomainName": "\${Token[TOKEN.48]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.49]}",
                            "bucketName": "\${Token[TOKEN.55]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.52]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.58]}",
                            "bucketWebsiteUrl": "\${Token[TOKEN.53]}",
                            "cors": [
                              {
                                "allowedHeaders": [
                                  "*",
                                ],
                                "allowedMethods": [
                                  "GET",
                                  "HEAD",
                                ],
                                "allowedOrigins": [
                                  "*",
                                ],
                                "maxAge": 300,
                              },
                            ],
                            "disallowPublicAccess": true,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "eventBridgeEnabled": undefined,
                            "inventories": [],
                            "isWebsite": true,
                            "lifecycleRules": [
                              {
                                "abortIncompleteMultipartUploadAfter": Duration {
                                  "amount": 1,
                                  "unit": TimeUnit {
                                    "inMillis": 86400000,
                                    "isoLabel": "D",
                                    "label": "days",
                                  },
                                },
                                "id": "AbortIncompleteMultipartUploadAfter",
                              },
                            ],
                            "metrics": [],
                            "node": Node {
                              "_children": {
                                "Policy": BucketPolicy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "bucket": [Circular],
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "0000000000",
                                    "region": "eu-central-1",
                                  },
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnBucketPolicy {
                                        "_cfnProperties": {
                                          "bucket": "\${Token[TOKEN.55]}",
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "s3:GetObject",
                                                "Condition": {
                                                  "StringEquals": {
                                                    "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                                  },
                                                },
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                                },
                                                "Resource": "\${Token[TOKEN.56]}/*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                        },
                                        "bucket": "\${Token[TOKEN.55]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::S3::BucketPolicy",
                                        "dependsOn": Set {},
                                        "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "s3:GetObject",
                                              "Condition": {
                                                "StringEquals": {
                                                  "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                                },
                                              },
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                              },
                                              "Resource": "\${Token[TOKEN.56]}/*",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "rawOverrides": {},
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Policy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.79]}",
                                  "resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnBucket {
                                  "_cfnProperties": {
                                    "accelerateConfiguration": undefined,
                                    "accessControl": "\${Token[TOKEN.45]}",
                                    "bucketEncryption": {
                                      "serverSideEncryptionConfiguration": [
                                        {
                                          "bucketKeyEnabled": undefined,
                                          "serverSideEncryptionByDefault": {
                                            "sseAlgorithm": "AES256",
                                          },
                                        },
                                      ],
                                    },
                                    "bucketName": "static.assets",
                                    "corsConfiguration": "<unresolved-lazy>",
                                    "intelligentTieringConfigurations": undefined,
                                    "inventoryConfigurations": "<unresolved-lazy>",
                                    "lifecycleConfiguration": "<unresolved-lazy>",
                                    "loggingConfiguration": undefined,
                                    "metricsConfigurations": "<unresolved-lazy>",
                                    "objectLockConfiguration": undefined,
                                    "objectLockEnabled": undefined,
                                    "ownershipControls": "<unresolved-lazy>",
                                    "publicAccessBlockConfiguration": BlockPublicAccess {
                                      "blockPublicAcls": true,
                                      "blockPublicPolicy": true,
                                      "ignorePublicAcls": true,
                                      "restrictPublicBuckets": true,
                                    },
                                    "replicationConfiguration": undefined,
                                    "versioningConfiguration": undefined,
                                    "websiteConfiguration": {
                                      "errorDocument": "index.html",
                                      "indexDocument": "index.html",
                                      "redirectAllRequestsTo": undefined,
                                      "routingRules": undefined,
                                    },
                                  },
                                  "accelerateConfiguration": undefined,
                                  "accessControl": "\${Token[TOKEN.45]}",
                                  "analyticsConfigurations": undefined,
                                  "attrArn": "\${Token[TOKEN.47]}",
                                  "attrDomainName": "\${Token[TOKEN.48]}",
                                  "attrDualStackDomainName": "\${Token[TOKEN.49]}",
                                  "attrMetadataTableConfigurationS3TablesDestinationTableArn": "\${Token[TOKEN.50]}",
                                  "attrMetadataTableConfigurationS3TablesDestinationTableNamespace": "\${Token[TOKEN.51]}",
                                  "attrRegionalDomainName": "\${Token[TOKEN.52]}",
                                  "attrWebsiteUrl": "\${Token[TOKEN.53]}",
                                  "bucketEncryption": {
                                    "serverSideEncryptionConfiguration": [
                                      {
                                        "bucketKeyEnabled": undefined,
                                        "serverSideEncryptionByDefault": {
                                          "sseAlgorithm": "AES256",
                                        },
                                      },
                                    ],
                                  },
                                  "bucketName": "static.assets",
                                  "cfnOptions": {
                                    "deletionPolicy": "Delete",
                                    "updateReplacePolicy": "Delete",
                                  },
                                  "cfnResourceType": "AWS::S3::Bucket",
                                  "corsConfiguration": "<unresolved-lazy>",
                                  "dependsOn": Set {},
                                  "intelligentTieringConfigurations": undefined,
                                  "inventoryConfigurations": "<unresolved-lazy>",
                                  "lifecycleConfiguration": "<unresolved-lazy>",
                                  "loggingConfiguration": undefined,
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                  "metadataTableConfiguration": undefined,
                                  "metricsConfigurations": "<unresolved-lazy>",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Bucket.Resource.LogicalID.46]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "notificationConfiguration": undefined,
                                  "objectLockConfiguration": undefined,
                                  "objectLockEnabled": undefined,
                                  "ownershipControls": "<unresolved-lazy>",
                                  "publicAccessBlockConfiguration": BlockPublicAccess {
                                    "blockPublicAcls": true,
                                    "blockPublicPolicy": true,
                                    "ignorePublicAcls": true,
                                    "restrictPublicBuckets": true,
                                  },
                                  "rawOverrides": {},
                                  "replicationConfiguration": undefined,
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "didHaveInitialTags": false,
                                    "externalTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::S3::Bucket",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  "tagsRaw": undefined,
                                  "versioningConfiguration": undefined,
                                  "websiteConfiguration": {
                                    "errorDocument": "index.html",
                                    "indexDocument": "index.html",
                                    "redirectAllRequestsTo": undefined,
                                    "routingRules": undefined,
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "Bucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "notificationsSkipDestinationValidation": undefined,
                            "objectOwnership": undefined,
                            "physicalName": "static.assets",
                            "policy": BucketPolicy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "bucket": [Circular],
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "s3:GetObject",
                                    "Condition": {
                                      "StringEquals": {
                                        "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                      },
                                    },
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                    },
                                    "Resource": "\${Token[TOKEN.56]}/*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "0000000000",
                                "region": "eu-central-1",
                              },
                              "node": Node {
                                "_children": {
                                  "Resource": CfnBucketPolicy {
                                    "_cfnProperties": {
                                      "bucket": "\${Token[TOKEN.55]}",
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "s3:GetObject",
                                            "Condition": {
                                              "StringEquals": {
                                                "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                              },
                                            },
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                            },
                                            "Resource": "\${Token[TOKEN.56]}/*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                    },
                                    "bucket": "\${Token[TOKEN.55]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::S3::BucketPolicy",
                                    "dependsOn": Set {},
                                    "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "s3:GetObject",
                                          "Condition": {
                                            "StringEquals": {
                                              "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                            },
                                          },
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                          },
                                          "Resource": "\${Token[TOKEN.56]}/*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "rawOverrides": {},
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Policy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.79]}",
                              "resource": CfnBucketPolicy {
                                "_cfnProperties": {
                                  "bucket": "\${Token[TOKEN.55]}",
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "s3:GetObject",
                                        "Condition": {
                                          "StringEquals": {
                                            "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                          },
                                        },
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                        },
                                        "Resource": "\${Token[TOKEN.56]}/*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                },
                                "bucket": "\${Token[TOKEN.55]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::S3::BucketPolicy",
                                "dependsOn": Set {},
                                "logicalId": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[NextJsApp.HostedBucket.Bucket.Policy.Resource.LogicalID.80]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "s3:GetObject",
                                      "Condition": {
                                        "StringEquals": {
                                          "AWS:SourceArn": "arn:\${Token[AWS.Partition.6]}:cloudfront::\${Token[AWS.AccountId.3]}:distribution/\${Token[TOKEN.74]}",
                                        },
                                      },
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[cloudfront.amazonaws.com.78]}",
                                      },
                                      "Resource": "\${Token[TOKEN.56]}/*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "rawOverrides": {},
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "replicationRoleArn": undefined,
                            "stack": [Circular],
                            "transitionDefaultMinimumObjectSize": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "connectionAttempts": undefined,
                          "connectionTimeout": undefined,
                          "customHeaders": undefined,
                          "domainName": "\${Token[TOKEN.52]}",
                          "originAccessControl": S3OriginAccessControl {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "env": {
                              "account": "0000000000",
                              "region": "eu-central-1",
                            },
                            "node": Node {
                              "_children": {
                                "Resource": CfnOriginAccessControl {
                                  "_cfnProperties": {
                                    "originAccessControlConfig": {
                                      "description": undefined,
                                      "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                      "originAccessControlOriginType": "s3",
                                      "signingBehavior": "always",
                                      "signingProtocol": "sigv4",
                                    },
                                  },
                                  "attrId": "\${Token[TOKEN.77]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                                  "dependsOn": Set {},
                                  "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "originAccessControlConfig": {
                                    "description": undefined,
                                    "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                    "originAccessControlOriginType": "s3",
                                    "signingBehavior": "always",
                                    "signingProtocol": "sigv4",
                                  },
                                  "rawOverrides": {},
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "S3OriginAccessControl",
                              "scope": Construct {
                                "node": Node {
                                  "_children": {
                                    "S3OriginAccessControl": [Circular],
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Origin1",
                                  "scope": [Circular],
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "originAccessControlId": "\${Token[TOKEN.77]}",
                            "physicalName": "\${Token[TOKEN.75]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "originAccessControlId": undefined,
                          "originAccessLevels": undefined,
                          "originId": undefined,
                          "originPath": undefined,
                          "originShieldEnabled": true,
                          "originShieldRegion": undefined,
                        },
                        "pathPattern": "*",
                        "viewerProtocolPolicy": "redirect-to-https",
                      },
                    },
                    "distributionDomainName": "\${Token[TOKEN.83]}",
                    "distributionId": "\${Token[TOKEN.85]}",
                    "domainName": "\${Token[TOKEN.83]}",
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "errorResponses": [
                      {
                        "httpStatus": 403,
                        "responseHttpStatus": 200,
                        "responsePagePath": "index.html",
                      },
                      {
                        "httpStatus": 404,
                        "responseHttpStatus": 200,
                        "responsePagePath": "index.html",
                      },
                    ],
                    "httpVersion": "http2and3",
                    "node": Node {
                      "_children": {
                        "Origin1": Construct {
                          "node": Node {
                            "_children": {
                              "S3OriginAccessControl": S3OriginAccessControl {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "env": {
                                  "account": "0000000000",
                                  "region": "eu-central-1",
                                },
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnOriginAccessControl {
                                      "_cfnProperties": {
                                        "originAccessControlConfig": {
                                          "description": undefined,
                                          "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                          "originAccessControlOriginType": "s3",
                                          "signingBehavior": "always",
                                          "signingProtocol": "sigv4",
                                        },
                                      },
                                      "attrId": "\${Token[TOKEN.77]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::CloudFront::OriginAccessControl",
                                      "dependsOn": Set {},
                                      "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[NextJsApp.HostedBucket.Distribution.Origin1.S3OriginAccessControl.Resource.LogicalID.76]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "originAccessControlConfig": {
                                        "description": undefined,
                                        "name": "NextJsAppHostedBucketDistribOrigin1S3OriginAccessControl5DC21F42",
                                        "originAccessControlOriginType": "s3",
                                        "signingBehavior": "always",
                                        "signingProtocol": "sigv4",
                                      },
                                      "rawOverrides": {},
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "S3OriginAccessControl",
                                  "scope": [Circular],
                                },
                                "originAccessControlId": "\${Token[TOKEN.77]}",
                                "physicalName": "\${Token[TOKEN.75]}",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Origin1",
                            "scope": [Circular],
                          },
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnDistribution {
                          "_cfnProperties": {
                            "distributionConfig": {
                              "aliases": [
                                "app.s0na.de",
                              ],
                              "cacheBehaviors": "<unresolved-lazy>",
                              "comment": "HostedBucket",
                              "customErrorResponses": [
                                {
                                  "errorCachingMinTtl": undefined,
                                  "errorCode": 403,
                                  "responseCode": 200,
                                  "responsePagePath": "index.html",
                                },
                                {
                                  "errorCachingMinTtl": undefined,
                                  "errorCode": 404,
                                  "responseCode": 200,
                                  "responsePagePath": "index.html",
                                },
                              ],
                              "defaultCacheBehavior": {
                                "allowedMethods": undefined,
                                "cachePolicyId": "\${Token[TOKEN.63]}",
                                "cachedMethods": undefined,
                                "compress": true,
                                "functionAssociations": undefined,
                                "grpcConfig": undefined,
                                "lambdaFunctionAssociations": undefined,
                                "originRequestPolicyId": undefined,
                                "pathPattern": "*",
                                "realtimeLogConfigArn": undefined,
                                "responseHeadersPolicyId": undefined,
                                "smoothStreaming": undefined,
                                "targetOriginId": "NextJsAppHostedBucketDistributionOrigin148025831",
                                "trustedKeyGroups": undefined,
                                "viewerProtocolPolicy": "redirect-to-https",
                              },
                              "defaultRootObject": undefined,
                              "enabled": true,
                              "httpVersion": "http2and3",
                              "ipv6Enabled": true,
                              "logging": undefined,
                              "originGroups": "<unresolved-lazy>",
                              "origins": "<unresolved-lazy>",
                              "priceClass": "PriceClass_100",
                              "restrictions": undefined,
                              "viewerCertificate": {
                                "acmCertificateArn": "\${Token[Default.Arn.44]}",
                                "minimumProtocolVersion": "TLSv1.2_2021",
                                "sslSupportMethod": "sni-only",
                              },
                              "webAclId": "\${Token[TOKEN.81]}",
                            },
                          },
                          "attrDomainName": "\${Token[TOKEN.83]}",
                          "attrId": "\${Token[TOKEN.84]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::CloudFront::Distribution",
                          "dependsOn": Set {},
                          "distributionConfig": {
                            "aliases": [
                              "app.s0na.de",
                            ],
                            "cacheBehaviors": "<unresolved-lazy>",
                            "comment": "HostedBucket",
                            "customErrorResponses": [
                              {
                                "errorCachingMinTtl": undefined,
                                "errorCode": 403,
                                "responseCode": 200,
                                "responsePagePath": "index.html",
                              },
                              {
                                "errorCachingMinTtl": undefined,
                                "errorCode": 404,
                                "responseCode": 200,
                                "responsePagePath": "index.html",
                              },
                            ],
                            "defaultCacheBehavior": {
                              "allowedMethods": undefined,
                              "cachePolicyId": "\${Token[TOKEN.63]}",
                              "cachedMethods": undefined,
                              "compress": true,
                              "functionAssociations": undefined,
                              "grpcConfig": undefined,
                              "lambdaFunctionAssociations": undefined,
                              "originRequestPolicyId": undefined,
                              "pathPattern": "*",
                              "realtimeLogConfigArn": undefined,
                              "responseHeadersPolicyId": undefined,
                              "smoothStreaming": undefined,
                              "targetOriginId": "NextJsAppHostedBucketDistributionOrigin148025831",
                              "trustedKeyGroups": undefined,
                              "viewerProtocolPolicy": "redirect-to-https",
                            },
                            "defaultRootObject": undefined,
                            "enabled": true,
                            "httpVersion": "http2and3",
                            "ipv6Enabled": true,
                            "logging": undefined,
                            "originGroups": "<unresolved-lazy>",
                            "origins": "<unresolved-lazy>",
                            "priceClass": "PriceClass_100",
                            "restrictions": undefined,
                            "viewerCertificate": {
                              "acmCertificateArn": "\${Token[Default.Arn.44]}",
                              "minimumProtocolVersion": "TLSv1.2_2021",
                              "sslSupportMethod": "sni-only",
                            },
                            "webAclId": "\${Token[TOKEN.81]}",
                          },
                          "logicalId": "\${Token[NextJsApp.HostedBucket.Distribution.Resource.LogicalID.82]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[NextJsApp.HostedBucket.Distribution.Resource.LogicalID.82]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "rawOverrides": {},
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::CloudFront::Distribution",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Distribution",
                      "scope": [Circular],
                    },
                    "originGroups": [],
                    "physicalName": "\${Token[TOKEN.64]}",
                    "publishAdditionalMetrics": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "SecretKey": CfnOutput {
                    "_condition": undefined,
                    "_description": undefined,
                    "_exportName": undefined,
                    "_key": "SecretKey",
                    "_value": "\${Token[TOKEN.102]}",
                    "logicalId": "\${Token[NextJsApp.HostedBucket.SecretKey.LogicalID.111]}",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[NextJsApp.HostedBucket.SecretKey.LogicalID.111]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "SecretKey",
                      "scope": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Zone": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "env": {
                      "account": "0000000000",
                      "region": "eu-central-1",
                    },
                    "hostedZoneId": "DUMMY",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Zone",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.11]}",
                    "stack": [Circular],
                    "zoneName": "s0na.de",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "HostedBucket",
                "scope": [Circular],
              },
              "url": "https://app.s0na.de",
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
          },
          "_context": {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": [],
          "_validations": [],
          "host": [Circular],
          "id": "NextJsApp",
          "scope": [Circular],
        },
        "region": "eu-central-1",
        "synthesizer": DefaultStackSynthesizer {
          "_boundStack": [Circular],
          "_cloudFormationExecutionRoleArn": "arn:\${AWS::Partition}:iam::0000000000:role/cdk-hnb659fds-cfn-exec-role-0000000000-eu-central-1",
          "_deployRoleArn": "arn:\${AWS::Partition}:iam::0000000000:role/cdk-hnb659fds-deploy-role-0000000000-eu-central-1",
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
          "bucketName": "cdk-hnb659fds-assets-0000000000-eu-central-1",
          "bucketPrefix": "",
          "dockerTagPrefix": "",
          "fileAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::0000000000:role/cdk-hnb659fds-file-publishing-role-0000000000-eu-central-1",
          "imageAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::0000000000:role/cdk-hnb659fds-image-publishing-role-0000000000-eu-central-1",
          "lookupRoleArn": "arn:\${AWS::Partition}:iam::0000000000:role/cdk-hnb659fds-lookup-role-0000000000-eu-central-1",
          "qualifier": "hnb659fds",
          "repositoryName": "cdk-hnb659fds-container-assets-0000000000-eu-central-1",
        },
        "tags": TagManager {
          "didHaveInitialTags": false,
          "externalTagPriority": 50,
          "priorities": Map {},
          "renderedTags": "<unresolved-lazy>",
          "resourceTypeName": "aws:cdk:stack",
          "tagFormatter": KeyValueFormatter {},
          "tagPropertyName": "tags",
          "tags": Map {},
        },
        "templateFile": "NextJsApp.template.json",
        "templateOptions": {},
        Symbol(@aws-cdk/core.DependableTrait): {
          "dependencyRoots": [
            [Circular],
          ],
        },
      },
    },
    "_context": {},
    "_dependencies": Set {},
    "_locked": false,
    "_metadata": [],
    "_validations": [],
    "host": [Circular],
    "id": "",
    "scope": undefined,
  },
  "parentStage": undefined,
  "policyValidationBeta1": [],
  "region": undefined,
  "stageName": "",
  Symbol(@aws-cdk/core.DependableTrait): {
    "dependencyRoots": [
      [Circular],
    ],
  },
  Symbol(@aws-cdk/core.Aspects.treeRevision): 1,
}
`;
